---
- block:
  - name: Set release_url for development envs
    set_fact:
      release_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview"
    when: build == 'dev'

  - name: Set release_url for GA envs
    set_fact:
      release_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp"
    when: build == 'ga'

  - name: Stat on OCP version
    stat:
      path: "{{ provision_cache_store }}/{{ version }}"
    register: ocpversionpath

  - block:
    - name: Set facts
      set_fact:
        webserver_url: "{{ groups['registry_host'][0] }}:8000"
        cmd: openshift-baremetal-install
        _pullsecret_file: "{{ provision_cache_store }}/pull-secret.txt"

    - name: Create cache dir
      file:
        path: "{{ provision_cache_store }}/{{ version }}"
        state: directory

    - name: Copy PullSecret into cache
      copy:
        content: "{{ pullsecret }}"
        dest: "{{ _pullsecret_file }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
        force: yes

    - name: Get Release.txt File
      uri:
        url: "{{ release_url }}/{{ version }}/release.txt"
        return_content: yes
      register: result
      until: result.status == 200
      retries: 6 # 1 minute (10 * 6)
      delay: 10 # Every 10 seconds
      failed_when: result.content|length == 0 or result.status >= 400

    - name: Set Fact for Release Image
      set_fact:
        release_version: "{{ result.content | regex_search('Version:.*') | regex_replace('Version:\\s*(.*)', '\\1') }}"
        release_image: "{{ result.content | regex_search('Pull From:.*') | regex_replace('Pull From:\\s*(.*)', '\\1') }}"

    - name: Store Release.txt File
      get_url:
        url: "{{ release_url }}/{{ version }}/release.txt"
        dest: "{{ provision_cache_store }}/{{ version }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Get the ocp client tar gunzip file
      get_url:
        url: "{{ release_url }}/{{ version }}/openshift-client-linux-{{ release_version }}.tar.gz"
        dest: "{{ provision_cache_store }}/{{ version }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: "Untar the openshift-client-linux-{{ release_version }}.tar.gz"
      unarchive:
        src: "{{ provision_cache_store }}/{{ version }}/openshift-client-linux-{{ release_version }}.tar.gz"
        dest: "{{ provision_cache_store }}/{{ version }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
        remote_src: yes

    - name: Extracting the installer
      command: |
        {{ provision_cache_store }}/{{ version }}/oc adm release extract \
        --registry-config {{ _pullsecret_file | quote }} --command={{ cmd | quote }} \
        --to {{ provision_cache_store }}/{{ version }} {{ release_image }}
      args:
        chdir: "{{ provision_cache_store }}/{{ version }}"
        executable: /bin/bash

    - name: Get COMMIT_ID
      shell: |
        {{ provision_cache_store }}/{{ version }}/openshift-baremetal-install version | grep '^built from commit' | awk '{print $4}'
      register: commit_id

    - name: Store rhcos.json File
      get_url:
        url: "https://raw.githubusercontent.com/openshift/installer/{{ commit_id.stdout }}/data/data/rhcos.json"
        dest: "{{ provision_cache_store }}/{{ version }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    when:
      - not ocpversionpath.stat.exists
  when:
    - "'registry_host' in groups"
    - groups['registry_host'] | length > 0
  delegate_to: "{{ groups['registry_host'][0] }}"

    # TODO: Mirror the following qcow images
    #bootstraposimage
    #clusterosimage
    #
    # TODO: Mirror registry
