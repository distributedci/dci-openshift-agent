- name: install httpd-tools
  package:
    name: httpd-tools
    state: present
  become: true

- name: set files facts
  set_fact:
    htpasswd_file: /tmp/users.htpasswd
    htpasswd_cr: /tmp/htpasswd.cr.yml
    htpasswd_secret: htpass-secret
    kubeconfig_file: "/home/{{ ansible_user }}/clusterconfigs/auth/kubeconfig"

- name: create file with hashed passwords
  shell: |
    touch {{ htpasswd_file }}
    htpasswd -B -b {{ htpasswd_file }} {{ item }} {{ item }}
  loop:
    - "admin"
    - "user1"
    - "user2"
    - "user3"
    - "demo1"
    - "demo2"
    - "demo1"

- name: create HTPasswd Secret
  shell: |
    oc --kubeconfig="{{ kubeconfig_file }}" create \
        secret generic {{ htpasswd_secret }} \
        --from-file=htpasswd={{ htpasswd_file }} \
        -n openshift-config
  register: secret_created
  failed_when: >
    "secret/{{ htpasswd_secret }} created" not in secret_created.stdout

- name: configure HTPasswd CR
  copy:
    dest: "{{ htpasswd_cr }}"
    mode: 0644
    content: |
      apiVersion: config.openshift.io/v1
      kind: OAuth
      metadata:
        name: cluster
      spec:
        identityProviders:
        - name: my_htpasswd_provider
          mappingMethod: claim
          type: HTPasswd
          htpasswd:
            fileData:
              name: {{ htpasswd_secret }}

- name: add HTPasswd Identity provider
  shell: |
    oc --kubeconfig="{{ kubeconfig_file }}" apply -f {{ htpasswd_cr }}
  register: provider_added
  failed_when: >
    'oauth.config.openshift.io/cluster configured' not in provider_added.stdout

- name: add cluster-admin role to admin user
  shell: |
    oc --kubeconfig="{{ kubeconfig_file }}" adm policy \
        add-cluster-role-to-user cluster-admin admin
