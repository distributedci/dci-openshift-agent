#!/bin/bash

ANSIBLE_PID=
JOB_ID_FILE=
JUNIT_OUTPUT_DIR=
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
start=0
params="$(getopt -o hsdp:c:v -l help,start,dev,prefix:,config:,verbose --name "$(basename -- "$0")" -- "$@")"

function usage ()
{
    name=$(basename -- "$0")
    cat << EOF
Usage: $name [-h] [-s] [-d] [-v] [-p PREFIX] [-c CONFIG] -- [ansible-playbook args]

arguments:
    -h, --help        Display this help message.
    -s, --start       Start the dci-openshift-agent.
    -p PREFIX, --prefix PREFIX
                      Specify prefix for Inventory and settings (use to specify different
                      clusters for example)
    -d, --dev         Use script directory to find dcirc.sh and dci-openshift-agent.yml (for dev usage)
    -c CONFIG, --config CONFIG
                      Path to config file. default is /etc/dci-openshift-agent/settings.yml
    -v, --verbose     Display commands
EOF
    exit $1
}

function finish ()
{
    echo "finish $*"

    if [ -n "${ANSIBLE_PID}" ]; then
        PGID=$(ps -o pgid= ${ANSIBLE_PID} | grep -o [0-9]*)

        if [ -n "${ANSIBLE_PID}" ]; then
            kill -KILL -$PGID
        else
            echo "Unable to find process group for ${ANSIBLE_PID}"
            kill ${ANSIBLE_PID}
        fi

        wait ${ANSIBLE_PID}
        exit $?
    fi

    if [ ! -z "${JOB_ID_FILE}" ] && [ ! -z "${JUNIT_OUTPUT_DIR}" ]; then
        JOB_ID=$(cat ${JOB_ID_FILE})
        for junit_file in ${JUNIT_OUTPUT_DIR}/*.xml; do
            junit_filename=$(basename "${junit_file%.xml}")
            dcictl job-upload-file --name ${junit_filename} --path ${junit_file} --mime application/junit ${JOB_ID}
        done
        echo "removing job id file: ${JOB_ID_FILE}"
        rm ${JOB_ID_FILE}
        echo "removing junit output dir: ${JUNIT_OUTPUT_DIR}"
        rm -r ${JUNIT_OUTPUT_DIR}
    fi
}

trap finish 0 SIGKILL

if [ -r /etc/dci-openshift-agent/config ]; then
    . /etc/dci-openshift-agent/config
fi

config_dir=${CONFIG_DIR:-/etc/dci-openshift-agent}
config=$config_dir/settings.yml

eval set -- "$params"
unset params

while true
do
    case $1 in
        -h|--help)
            usage 0
        ;;
        -s|--start)
            start=1
            shift
        ;;
        -d|--dev)
            dev=1
            shift
        ;;
        -c|--config)
            shift
            config=$1
            shift
        ;;
        -p|--prefix)
            shift
            prefix=$1
            shift
        ;;
        -v|--verbose)
            set -x
            shift
            ;;
        --)
            shift
            break
        ;;
        *)
            usage 1
        ;;
    esac
done

if [ "$( id -u dci-openshift-agent )" != "$( id -u )" ]; then
    echo "must be run as the dci-openshift-agent user"
    usage 1
fi

if [ -n "$prefix" ]; then
    hosts="$config_dir/${prefix}-hosts"
    settings="$config_dir/${prefix}-settings.yml"
    if [ -e "$settings" ]; then
        prefix_args="${prefix_args} -e @$settings"
    else
        echo "Missing $settings, will only use $config."
    fi

    if [ -e "$hosts" ]; then
        prefix_args="-i $hosts"
    else
        echo "Missing $hosts"
        exit 1
    fi
fi

if [ "$start" -eq 1 ]; then
    if [ -z "$dev" ]; then
        [ -e /etc/dci-openshift-agent/dcirc.sh ] && . /etc/dci-openshift-agent/dcirc.sh
        [ -d ${DCI_OPENSHIFT_AGENT_DIR:-/usr/share/dci-openshift-agent} ] && cd ${DCI_OPENSHIFT_AGENT_DIR:-/usr/share/dci-openshift-agent}
    else
        [ -e $DIR/dcirc.sh ] && . $DIR/dcirc.sh
        export ANSIBLE_CONFIG=$DIR/dev-ansible.cfg
    fi

    JOB_ID_FILE="$(mktemp /tmp/dci-openshift-agent.job.XXXXX)"
    export JUNIT_OUTPUT_DIR="$(mktemp -d /tmp/dci-openshift-agent.junit.XXXXX)"
    setsid ansible-playbook dci-openshift-agent.yml -e JOB_ID_FILE="${JOB_ID_FILE}" -e @$config ${prefix_args} "$@" &
    ANSIBLE_PID=$!

    wait ${ANSIBLE_PID}
    ANSIBLE_PID=
    exit $?
else
    echo "Dry-Run: pass -s or --start to actually execute"
    if [ -z "$dev" ]; then
        echo ". /etc/dci-openshift-agent/dcirc.sh"
        echo "cd /usr/share/dci-openshift-agent"
    else
        echo "$DIR/dcirc.sh"
        echo "ANSIBLE_CONFIG=$DIR/dev-ansible.cfg"
    fi
    if [ -z "${JUNIT_OUTPUT_DIR}" ]; then
        echo "setsid ansible-playbook dci-openshift-agent.yml -e @$config ${prefix_args} "$@" &"
    else
        JOB_ID_FILE="$(mktemp /tmp/job.XXXXX)"
        echo "setsid ansible-playbook dci-openshift-agent.yml -e JOB_ID_FILE="${JOB_ID_FILE}" -e @$config ${prefix_args} "$@" &"
    fi
    exit 1
fi
