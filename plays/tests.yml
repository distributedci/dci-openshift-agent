---
- name: "dci-openshift-agent : Setup openshift access"
  include_role:
    name: oc-setup

- name: "dci-openshift-agent : Setup podman on the jumphost"
  include_role:
    name: ansible-role-dci-podman

- name: Get oc version output
  environment:
    KUBECONFIG: "{{ dci_cluster_configs_dir }}/kubeconfig"
  shell: |
    {{ dci_cluster_configs_dir }}/oc version
  register: oc_version_str
  delegate_to: localhost

- name: Get OCP version
  set_fact:
    ocp_version: "{{ '.'.join(item.split(':')[1].strip().split('.')[0:2]) }}"
    ocp_version_maj: "{{ item.split(':')[1].strip().split('.')[0] }}"
    ocp_version_min: "{{ item.split(':')[1].strip().split('.')[1] }}"
  when: "'Server Version' in item"
  loop: "{{ oc_version_str.stdout_lines }}"

- name: "dci-openshift-agent : Side-load podman images prior to testing (legacy)"
  vars:
    sideload_ocp_cluster: "{{ cluster }}"
    sideload_ocp_provisioner: "{{ groups['provisioner'][0] }}"
    sideload_ocp_cluster_nodes: "{{ groups['masters'] + groups['workers'] }}"
    sideload_images:
      - "mirror.gcr.io/library/busybox:1.29"
      - "docker.io/library/httpd:2.4.38-alpine"
      - "mirror.gcr.io/library/nginx:1.14-alpine"
      - "gcr.io/kubernetes-e2e-test-images/mounttest:1.0"
      - "k8s.gcr.io/pause:3.2"
      - "us.gcr.io/k8s-artifacts-prod/e2e-test-images/agnhost:2.12"
  include_role:
    name: ansible-role-dci-ocp-imagesideload
  when:
    - (dci_openshift_agent_conformance | string | length) > 0
    - dci_disconnected | default(false) | bool
    - ocp_version_maj|int == 4
    - ocp_version_min|int <= 6

- name: "dci-openshift-agent : Run Red Hat test suite"
  vars:
    ocp_version_maj: "{{ ocp_version_maj }}"
    ocp_version_min: "{{ ocp_version_min }}"
    conformance_registry_certificate: "{{ registry_certificate }}"
    conformance_local_registry: "{{ local_registry }}"
    conformance_registry_auth: "{{ dci_pullsecret_file }}"
  include_role:
    name: redhat-tests
  when:
    - (dci_openshift_agent_conformance | string | length) > 0
    - registry_certificate is defined

# Setup and run cnf-tests
- block:
    - name: Mirror images to local registry for disconnected cnf-tests
      vars:
        dci_pullsecret_file: "{{ hostvars[groups['registry_host'][0]].provision_cache_store }}/{{ cluster }}-pull-secret.txt"
      include_tasks: cnf-tests-mirror.yml
      when: cnf_tests_mode == "offline"

    - name: Run cnf tests
      vars:
        dci_pullsecret_file: "{{ hostvars[groups['registry_host'][0]].provision_cache_store }}/{{ cluster }}-pull-secret.txt"
      include_tasks: cnf-tests-run.yml
  when:
    - cnf_tests_mode is defined
    - cnf_tests_mode in ['online', 'offline']

- name: Run CVP/OVP tests if bundle_spec is defined
  include_role:
    name: dci-cvp
  vars:
    dci_cvp_bundle_spec: "{{ cvp_bundle_spec }}"
    dci_cvp_bundle_tag: "{{ cvp_bundle_tag }}"
    dci_cvp_pullsecret_file: "{{ dci_pullsecret_file }}"
    dci_cvp_registry_host: "{{ local_registry }}"
    dci_cvp_cache_dir: "{{ dci_cache_dir }}"
    dci_cvp_cs_url: "{{ dci_cs_url }}"
    dci_cvp_client_id: "{{ dci_client_id }}"
    dci_cvp_api_secret: "{{ dci_api_secret }}"
    dci_cvp_pyxis_submit: "{{ cvp_submit| default(false) }}"
    dci_cvp_pyxis_apikey: "{{ pyxis_apikey| default(omit) }}"
    dci_cvp_pyxis_identifier: "{{ pyxis_identifier| default(omit) }}"
    dci_cvp_kubeconfig: "{{ dci_cluster_configs_dir }}/kubeconfig"
  when:
    - cvp_bundle_spec is defined
    - cvp_bundle_tag is defined
    - local_registry is defined
    - dci_pullsecret_file is defined
...
