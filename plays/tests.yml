---
- name: "dci-openshift-agent : Setup podman on the jumphost"
  include_role:
    name: ansible-role-dci-podman

- name: Get oc version output
  environment:
    KUBECONFIG: "{{ dci_cluster_configs_dir }}/kubeconfig"
  shell: |
    {{ dci_cluster_configs_dir }}/oc version
  register: oc_version_str
  delegate_to: localhost

- name: Get OCP version
  set_fact:
    ocp_version: "{{ '.'.join(item.split(':')[1].strip().split('.')[0:2]) }}"
    ocp_version_major: "{{ item.split(':')[1].strip().split('.')[0] }}"
    ocp_version_minor: "{{ item.split(':')[1].strip().split('.')[1] }}"
  when: "'Server Version' in item"
  loop: "{{ oc_version_str.stdout_lines }}"

- name: "dci-openshift-agent : Run the Red Hat Test Suites"
  vars:
    ts_e2e_image: "quay.io/openshift/origin-tests"
    ts_registry: "{{ local_registry_host }}:{{ local_registry_port }}"
    ts_registry_auth: "{{ provision_cache_store }}/{{ cluster }}-pull-secret.txt"
    ts_ocp_version_maj: "{{ ocp_version_major | int }}"
    ts_ocp_version_min: "{{ ocp_version_minor | int }}"
    ts_registry_certificate: "{{ registry_certificate }}"
    ts_conformance_tests: "{{ dci_openshift_agent_conformance }}"
    ts_configs_dir: "{{ dci_cluster_configs_dir }}"
    ts_csi_tests_dir: "{{ dci_cluster_tests_dir }}"
    ts_csi_test_manifest: "{{ dci_openshift_csi_test_manifest }}"
  include_role:
    name: redhat-tests

# Setup and run cnf-tests
- block:
    - name: Mirror images to local registry for disconnected cnf-tests
      vars:
        dci_pullsecret_file: "{{ provision_cache_store }}/{{ cluster }}-pull-secret.txt"
      include_tasks: cnf-tests-mirror.yml
      when: cnf_tests_mode == "offline"

    - name: Run cnf tests
      vars:
        dci_pullsecret_file: "{{ provision_cache_store }}/{{ cluster }}-pull-secret.txt"
      include_tasks: cnf-tests-run.yml
  when:
    - cnf_tests_mode is defined
    - cnf_tests_mode in ['online', 'offline']

- name: create CVP namespace
  k8s:
    api_version: v1
    name: "{{ cvp_namespace }}"
    kind: Namespace
  when:
    - cvp_namespace is defined

- name: Run CVP/OVP tests if bundle_spec is defined
  include_role:
    name: dci-cvp
  vars:
    dci_cvp_bundle_spec: "{{ cvp_bundle_spec }}"
    dci_cvp_bundle_tag: "{{ cvp_bundle_tag }}"
    dci_cvp_pullsecret_file: "{{ dci_pullsecret_file }}"
    dci_cvp_registry_host: "{{ local_registry_host }}:{{ local_registry_port }}"
    dci_cvp_cache_dir: "{{ dci_cache_dir }}"
    dci_cvp_cs_url: "{{ dci_cs_url }}"
    dci_cvp_client_id: "{{ dci_client_id }}"
    dci_cvp_api_secret: "{{ dci_api_secret }}"
    dci_cvp_pyxis_submit: "{{ cvp_submit| default(false) }}"
    dci_cvp_pyxis_apikey: "{{ pyxis_apikey| default(omit) }}"
    dci_cvp_pyxis_identifier: "{{ pyxis_identifier| default(omit) }}"
    dci_cvp_kubeconfig: "{{ dci_cluster_configs_dir }}/kubeconfig"
    dci_cvp_namespace: "{{ cvp_namespace | default(omit) }}"
  when:
    - cvp_bundle_spec is defined
    - cvp_bundle_tag is defined
    - local_registry_host is defined
    - local_registry_port is defined
    - dci_pullsecret_file is defined
...
