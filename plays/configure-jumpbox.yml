---
- name: Install helper tools
  vars:
    python_version: >-
      {{ (ansible_python.version.major == 3)
      | ansible.builtin.ternary('python3', 'python') }}
  become: true
  ansible.builtin.package:
    name:
      - "{{ python_version }}-firewall"
      - "{{ python_version }}-dns"
      - "{{ python_version }}-netaddr"
      - "jq"
      - "expect"
      - python3-passlib  # Comes from EPEL, required in redhatci.ocp/oc_setup
    state: installed

- name: Install grpcurl when uninstalled
  block:
    - name: Check grpcurl is installed
      ansible.builtin.stat:
        path: /usr/local/bin/grpcurl
        get_checksum: false
      register: grpcurl_path

    - name: Install grpcurl
      ansible.builtin.unarchive:
        src: https://github.com/fullstorydev/grpcurl/releases/download/v1.8.2/grpcurl_1.8.2_linux_x86_64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        mode: "0755"
      register: result
      retries: 3
      delay: 10
      until: result is not failed
      become: true
      when: not grpcurl_path.stat.exists

- name: Ensure DCI cache directory is present
  ansible.builtin.file:
    path: "{{ dci_cache_dir }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0750"
  become: true

- name: "Ensure tmp directory existes"
  ansible.builtin.file:
    state: directory
    path: "{{ ansible_env.HOME }}/tmp"
    mode: "0750"

- name: "Set roles_path"
  ansible.builtin.set_fact:
    roles_path: "{{ lookup('ansible.builtin.config', 'DEFAULT_ROLES_PATH') }}"

- name: Cluster config directory
  when:
    - dci_main == 'install'
  block:
    - name: "Clean up {{ dci_cluster_configs_dir }}"
      ansible.builtin.file:
        path: "{{ dci_cluster_configs_dir }}"
        state: absent

    - name: "Create {{ dci_cluster_configs_dir }}"
      ansible.builtin.file:
        path: "{{ dci_cluster_configs_dir }}"
        state: directory
        mode: "0755"

- name: "Download stable openshift clients"
  vars:
    ocp_clients_url:
      "https://mirror.openshift.com/pub/openshift-v4/\
      x86_64/clients/ocp/stable"
    opm_suffix: "{{ ansible_distribution_major_version is version('9', '==') | ternary('-rhel9', '') }}"
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: "{{ dci_cluster_configs_dir }}"
    remote_src: true
    mode: "0755"
  register: result
  retries: 3
  delay: 10
  loop:
    - "{{ ocp_clients_url }}/openshift-client-linux-amd64-rhel\
      {{ ansible_distribution_major_version }}.tar.gz"
    - "{{ ocp_clients_url }}/opm-linux{{ opm_suffix }}.tar.gz"

- name: "Setup podman on the jumphost"
  ansible.builtin.include_role:
    name: ansible-role-dci-podman
...
