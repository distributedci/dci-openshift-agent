---
- name: "Get cluster facts"
  include_tasks: get-cluster-facts.yml

- name: Increase maxUnavailable workers
  include_tasks: increase_maxunavailable.yml
  when:
    - increase_unavailable_workers | default(True) | bool
    - install_type is undefined or install_type != 'sno'
    - acm_cluster_type | default('') not in ['hypershift', 'sno']

- name: Wait for Performance Addon Operator endpoint to become available
  pause:
    seconds: 60
  when:
    - install_type is defined and install_type == 'sno'
    - ocp_version_maj|int == 4
    - ocp_version_min|int <= 10

- name: Create PerformanceProfile
  community.kubernetes.k8s:
    definition: "{{ lookup('file', performance_definition) }}"
  register: profile_state
  retries: 5
  delay: 60
  until: profile_state is not failed

- name: Wait for Performance Profile KubeletConfig creation
  vars:
    check_wait_retries: "{{ 16 * (dci_compute_size | default(dci_control_plane_size) | length + 1 ) }}"
  community.kubernetes.k8s_info:
    api: machineconfiguration.openshift.io/v1
    kind: KubeletConfig
    name: "performance-{{ profile_state.result.metadata.name }}"
    namespace: default
  register: kubelet
  retries: "{{ check_wait_retries }}"
  delay: 60
  until:
    - kubelet.resources is defined
    - kubelet.resources | length == 1
  failed_when:
    - kubelet.resources | default([]) | length != 1
  when:
    - profile_state is defined

- name: Set Performance Profile KubeletConfig creation time
  set_fact:
    perf_kubelet_timestamp: "{{ kubelet.resources[0].metadata.creationTimestamp }}"

- name: Wait (up to 10 mins) for rendered-worker MC triggered by Performance Profile
  community.kubernetes.k8s_info:
    api_version: machineconfiguration.openshift.io/v1
    kind: MachineConfig
  register: reg_worker_mc
  vars:
    worker_mc_query: "[?contains(metadata.name, 'rendered-worker')].metadata.creationTimestamp"
    worker_mc_timestamp: "{{ reg_worker_mc.resources | to_json | from_json | json_query(worker_mc_query) | sort | last }}"
  until:
    - reg_worker_mc.resources is defined
    - worker_mc_timestamp > perf_kubelet_timestamp
  retries: 60
  delay: 10
  when:
    - install_type is undefined or install_type != 'sno'
    - reg_mcpool_worker.resources[0].status.machineCount >= 1
    - profile_state.result.spec.nodeSelector is search('worker')

- name: Wait (up to 10 mins) for rendered-controlplane MC triggered by Performance Profile
  community.kubernetes.k8s_info:
    api_version: machineconfiguration.openshift.io/v1
    kind: MachineConfig
  register: reg_controlplane_mc
  vars:
    controlplane_mc_query: "[?contains(metadata.name, 'rendered-master')].metadata.creationTimestamp"
    controlplane_mc_timestamp: "{{ reg_controlplane_mc.resources | to_json | from_json | json_query(controlplane_mc_query) | sort | last }}"
  until:
    - reg_controlplane_mc.resources is defined
    - controlplane_mc_timestamp >= perf_kubelet_timestamp
  retries: 60
  delay: 10
  when:
    - install_type is undefined or install_type != 'sno'
    - reg_mcpool_controlplane.resources[0].status.machineCount >= 1
    - profile_state.result.spec.nodeSelector is search('master')

- name: Pause 60 seconds to wait for MC triggered by Performance Profile starts the node changes
  pause:
    seconds: 60
  when:
    - install_type is undefined or install_type != 'sno'
    - reg_mcpool_worker.resources[0].status.machineCount >= 1 or reg_mcpool_controlplane.resources[0].status.machineCount >= 1
  no_log: true

- name: Wait for SNO node to be available
  include_tasks: wait_sno_reboot.yml
  when:
    - dci_control_plane_size | int == 1

- name: Wait for MCP status
  include_role:
    name: redhatci.ocp.check_resource
  vars:
    resource_to_check: "MachineConfigPool"
    check_wait_retries: "{{ 16 * (dci_compute_size | default(dci_control_plane_size) | length + 1 ) }}"
    check_wait_delay: 90
    check_reason: "PAO installation"

- name: Create Tuned object
  block:
    - name: Apply tuned definition
      community.kubernetes.k8s:
        definition: "{{ lookup('file', tuned_definition) }}"
      register: tuned_state
      retries: 5
      delay: 60
      until: tuned_state is not failed

    - name: Wait for the tuned creation
      vars:
        check_wait_retries: "{{ 16 * (dci_compute_size | default(dci_control_plane_size) | length + 1 ) }}"
      community.kubernetes.k8s_info:
        api: tuned.openshift.io/v1
        kind: Tuned
        name: "{{ tuned_state.result.spec.profile[0].name }}"
        namespace: openshift-cluster-node-tuning-operator
      register: tuned_created
      retries: 10
      delay: 10
      until:
        - tuned_created.resources is defined
        - tuned_created.resources | length == 1
      failed_when:
        - tuned_created.resources | default([]) | length != 1

    - name: Wait for MCP status
      include_role:
        name: redhatci.ocp.check_resource
      vars:
        resource_to_check: "MachineConfigPool"
        check_wait_retries: "{{ 16 * (dci_compute_size | default(dci_control_plane_size) | length + 1 ) }}"
        check_wait_delay: 90
        check_reason: "Tuned creation"
  when: tuned_definition is defined

- name: Reset maxUnavailable count to default value 1
  community.kubernetes.k8s:
    definition:
      kind: MachineConfigPool
      metadata:
        name: worker
      spec:
        maxUnavailable: 1
...
