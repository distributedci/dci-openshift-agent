---
# Prepare host
- name: Configure jumpbox
  include_tasks: configure-jumpbox.yml

# Download Openshift from DCI
- name: Import Openshift files from DCI
  include_tasks: fetch-bits.yml

# Mirror Operators
- name: "dci-openshift-agent : Mirror Operators"
  include_role:
    name: operators-mirror

- name: Get provisioner SSH identity
  delegate_to: "{{ groups['provisioner'][0] }}"
  fetch:
    src: "{{ item }}"
    dest: "~/.ssh/{{ cluster }}-provisioner_key"
    flat: true
  with_first_found:
    - "~{{ ansible_user }}/.ssh/id_ed25519"
    - "~{{ ansible_user }}/.ssh/id_rsa"

- name: Erase bootloader to prevent old OS to boot
  delegate_to: "{{ item }}"
  become: true
  shell: |
    if grep 'Red Hat Enterprise Linux CoreOS' /etc/os-release; then
      for disk in /dev/sd?; do
        dd if=/dev/zero of=$disk bs=512 count=1
      done
    fi
  when:
    - dci_erase_bootloader_on_disk|default(False)|bool
    - dci_main is not defined or dci_main == 'install'
  with_items: "{{ groups['masters'] + groups['workers'] }}"
  ignore_unreachable: true
  ignore_errors: true

- name: Gather the package facts
  package_facts:
    manager: auto

- include_tasks: track_rpm.yml
  with_items: "{{ dci_rpms_to_components }}"

- include_tasks: track_git_repo.yml
  with_items: "{{ dci_gits_to_components }}"
...
