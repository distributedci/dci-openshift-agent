---
- name: Pre install
  include_tasks: pre-install.yml
  when:
    - dci_main == 'install'

## Additional Job validations

- name: "Validate NFS provisioner variables"
  ansible.builtin.assert:
    that:
      - nfs_server is defined
      - nfs_server | length > 0
      - nfs_path is defined
      - nfs_path | length > 0
  when:
    - enable_nfs_storage | bool

- name: "Validate Logging Subsystem variables"
  when:
    - logs_settings is defined
    - logs_settings | default("") | length
    - enable_logs_stack | bool
  block:
    - name: "Check logs_settings file"
      ansible.builtin.stat:
        path: "{{ logs_settings }}"
      register: file_stat

    - name: "Load logs_settings from vars file"
      ansible.builtin.include_vars:
        file: "{{ logs_settings }}"
      when:
        - file_stat is defined
        - file_stat.stat.exists

- name: Include sources as components when using container
  ansible.builtin.set_fact:
    dci_listed_to_components: "{{ lookup('file', '/tmp/src_version.txt') | from_yaml }}"
  delegate_to: localhost
  when: hostvars.localhost.run_in_container | default(false) | bool

- name: Include installed software as components
  vars:
    mandatory_rpms:
      - ansible
      - ansible-collection-redhatci-ocp
      - dci-ansible
      - dci-openshift-agent
      - dci-pipeline
      - python3-dciclient
      - python3-kubernetes
      - python3-openshift
    ic_rpms: "{{ (dci_rpms_to_components + mandatory_rpms)|flatten }}"
    ic_gits: "{{ dci_gits_to_components | flatten }}"
    ic_dev_gits: "{{ dev_gits_to_components|flatten }}"
    ic_listed: "{{ dci_listed_to_components | default([]) }}"
  ansible.builtin.include_role:
    name: redhatci.ocp.include_components
    apply:
      delegate_to: localhost
...
