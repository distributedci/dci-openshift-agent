---
- block:
  - name: "Get cluster config"
    community.kubernetes.k8s_info:
      kind: ConfigMap
      namespace: kube-system
      name: cluster-config-v1
    register: cluster_conf

  - name: "Set webserver URL"
    vars:
      cluster_install_info: |-
        {{ ( cluster_conf.resources[0].data |
        from_yaml )['install-config'] |
        from_yaml }}
    set_fact:
      webserver_url: "{{ cluster_install_info.platform.baremetal.bootstrapOSImage | urlsplit('scheme') }}://{{ cluster_install_info.platform.baremetal.bootstrapOSImage | urlsplit('netloc') }}"
    when:
      - cluster_conf.resources | length

  - name: "Get Cluster ICSP"
    community.kubernetes.k8s_info:
      api_version: operator.openshift.io/v1alpha1
      kind: ImageContentSourcePolicy
    register: cluster_icsp

  - name: "Set local_registry"
    vars:
      loc_reg: "docker://{{ cluster_icsp.resources[0].spec.repositoryDigestMirrors[0].mirrors[0] }}"
    set_fact:
      local_registry: "{{ loc_reg | urlsplit('netloc') }}"
    when:
      - cluster_icsp.resources | length

  - name: "Apply new OCP signature and release ICSP"
    community.kubernetes.k8s:
      definition: '{{ item }}'
    with_items:
      - '{{ lookup("url", "{{ webserver_url }}/{{ version }}/signature.yaml", split_lines=False) | from_yaml_all | list }}'
      - '{{ lookup("url", "{{ webserver_url }}/{{ version }}/imagecontentsourcepolicy.yaml", split_lines=False) | from_yaml_all | list }}'
    when: item is not none

  - name: "upgrader : Wait for nodes to become Ready"
    community.kubernetes.k8s_info:
      kind: Node
    register: nodes_info
    vars:
      status_query: "resources[*].status.conditions[?type=='Ready'].status"
      nodes_status: "{{ nodes_info | json_query(status_query) | flatten | unique }}"
    until:
      - nodes_status == ['True']
    retries: 10
    delay: 30

  - name: "upgrader : Patch clusterversion to point to custom upstream graph"
    community.kubernetes.k8s:
      state: present
      name: version
      definition:
        kind: ClusterVersion
        spec:
          upstream: "{{ webserver_url }}/graph-{{ version.split('.')[0:2]|join('.') }}"

  - name: "upgrader : Wait custom upstream graph update"
    community.kubernetes.k8s_info:
      kind: ClusterVersion
      name: version
    register: cluster_version
    vars:
      status_query: "conditions[?type=='RetrievedUpdates'].status"
      upgrade_status: "{{ cluster_version.resources[0].status | json_query(status_query) }}"
    until:
      - upgrade_status == ['True']
    when:
      - not force_upgrade | default(false) | bool
    retries: 10
    delay: 120
  when:
    - dci_disconnected | default(false) | bool

- name: "upgrader : Patch clusterversion pointing to selected channel"
  vars:
    channel: >-
      {{ upgrade_eus | default(false) |
         ternary(
           'eus-' + target_version,
           'fast-' + target_version ) }}
  community.kubernetes.k8s:
    state: present
    name: version
    definition:
      kind: ClusterVersion
      spec:
        channel: "{{ channel }}"

- name: "upgrader : Get openshift-cluster-version pod name"
  community.kubernetes.k8s_info:
    kind: pod
    namespace: openshift-cluster-version
  register: ocvpod

- name: "upgrader : Delete the openshift-cluster-version pod"
  community.kubernetes.k8s:
    state: absent
    kind: pod
    namespace: openshift-cluster-version
    name: "{{ ocvpod.resources[0].metadata.name }}"

- name: "upgrader : Wait the openshift-cluster-version pod creation"
  community.kubernetes.k8s_info:
    kind: pod
    namespace: openshift-cluster-version
  register: ocvpod
  vars:
    status_query: "conditions[?type=='Ready'].status"
    pod_status: "{{ ocvpod.resources[0].status | json_query(status_query) }}"
  until:
    - pod_status == ['True']
  retries: 10
  delay: 60

- name: "upgrader : Wait for an updated clusterversion"
  community.kubernetes.k8s_info:
    kind: ClusterVersion
    name: version
  register: cluster_version
  vars:
    status_query: "conditions[?type=='RetrievedUpdates'].status"
    upgrade_status: "{{ cluster_version.resources[0].status | json_query(status_query) }}"
  until:
    - upgrade_status == ['True']
  when:
    - not force_upgrade | default(false) | bool
  retries: 10
  delay: 60

- name: "upgrader : Execute the upgrade"
  vars:
    upgrade_options: >-
      --to-image={{ version_pull_url }}
      {% if force_upgrade | default(false) %}
      --force
      --allow-explicit-upgrade
      --allow-upgrade-with-warnings
      {% endif %}
  command:
    cmd: "{{ oc_tool_path }} adm upgrade {{ upgrade_options }}"
  register: start_upgrade

- name: "upgrader : Wait for upgrade to start"
  vars:
    cluster_version_conditions: "{{ cluster_version_info.resources.0.status.conditions }}"
    condition_progressing: '{{ cluster_version_conditions | selectattr("type", "equalto", "Progressing") | first }}'
  community.kubernetes.k8s_info:
    kind: ClusterVersion
    name: version
  register: cluster_version_info
  until: '"Working towards " in condition_progressing.message'
  retries: 10
  delay: 30

- name: "Upgrade elapsed time"
  set_fact:
    elapsed_time: 0

- name: "Upgrader: Monitor upgrade"
  include_tasks: monitor-upgrade.yml

- name: "Upgrader : Pre-upgrade tasks"
  include_tasks: pre-upgrade.yml

- name: "Prepare operators and catalogs"
  include_tasks: prepare-operators.yml

- name: "Upgrader : Start the upgrade on installed operators"
  include_tasks: upgrade-operators.yml
  when:
    - upgrade_operators | default(true) | bool

- name: "test_ upgrader: check if all cluster-operators are running correctly"
  community.kubernetes.k8s_info:
    kind: ClusterOperator
  register: clusteroperator_info
  vars:
    status_query: "resources[*].status.conditions[?type=='Degraded'].status"
    cluster_operators_degraded: "{{ clusteroperator_info | json_query(status_query) | flatten | unique }}"
  failed_when: cluster_operators_degraded == ['True']

- name: "Validate that nodes are Ready and MCPs are up to date"
  include_role:
    name: check-resource
  vars:
    resource_to_check: "MachineConfigPool"
    check_wait_retries: 100
    check_wait_delay: 10
    check_reason: "Upgrade - after having operators running"
...
