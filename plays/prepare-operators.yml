- name: "Get cluster pull-secret"
  include_tasks: get-cluster-pullsecret.yml

- name: "Create temp directory for docker auths"
  tempfile:
    state: directory
    prefix: dci_auth.
  register: docker_conf

- name: "Copy dci_pull_secret as config.json"
  copy:
    src: "{{ dci_pullsecret_file }}"
    dest: "{{ docker_conf.path }}/config.json"
    mode: "0640"

- name: "Disable default catalog sources for disconnected deployment"
  block:
    - name: "Disable default catalog sources for disconnected deployment"
      community.kubernetes.k8s:
        definition:
          apiVersion: config.openshift.io/v1
          kind: OperatorHub
          metadata:
            name: cluster
          spec:
            disableAllDefaultSources: true

    - name: "Validate Red Hat catalogSources are disabled"
      community.kubernetes.k8s_info:
        api: operators.coreos.com/v1alpha1
        kind: CatalogSource
        namespace: openshift-marketplace
      register: catalogs_list
      until:
        - catalogs_list.resources is defined
        - catalogs_list.resources | length == 0
      retries: 6
      delay: 10

    - name: Get OLM pod for catalog-operator
      community.kubernetes.k8s_info:
        api_version: v1
        kind: Pod
        namespace: openshift-operator-lifecycle-manager
        label_selectors:
          - app=catalog-operator
      register: olm_pod

    - name: Restart matching pods
      community.kubernetes.k8s:
        definition: |
          {{ item }}
        state: absent
      loop: "{{ olm_pod.resources }}"

    - name: Wait for OLM pod catalog-operator to be running
      community.kubernetes.k8s_info:
        kind: Pod
        namespace: openshift-operator-lifecycle-manager
        label_selectors:
          - app=catalog-operator
      register: olm_pod
      until: olm_pod | json_query('resources[*].status.phase') | unique == ["Running"]
      retries: 6
      delay: 10
  when:
    - dci_main == 'install'
    - dci_disconnected | default(false) | bool

- name: "Catalog from Image"
  include_tasks:
    file: catalog-from-image.yml
    apply:
      environment:
        DOCKER_CONFIG: "{{ docker_conf.path }}"
  when:
    - operator_catalog_dir | length == 0

- name: "Catalog from File"
  include_tasks:
    file: catalog-from-file.yml
    apply:
      environment:
        DOCKER_CONFIG: "{{ docker_conf.path }}"
  when:
    - operator_catalog_dir | length
    - dci_local_registry | length

- name: "Mirror custom catalogs"
  include_tasks: mirror-catalog.yml
  loop: "{{ custom_catalogs }}"
  loop_control:
    loop_var: catalog
  when:
    - custom_catalogs | default([]) | length

- name: "Apply Image Sources for all catalogs"
  block:
    - name: "Apply Image Source manifests"
      community.kubernetes.k8s:
        state: present
        src: "{{ is_file }}"
      loop: "{{ is_files | unique | select | list }}"
      loop_control:
        loop_var: is_file

    - name: "Delete Image Source manifest"
      file:
        path: "{{ is_file }}"
        state: absent
      loop: "{{ is_files | unique | select | list }}"
      loop_control:
        loop_var: is_file
  when:
    - is_files is defined
    - is_files | length

- name: "Wait for updated MCP after applying ICSP"
  include_role:
    name: check_resource
  vars:
    resource_to_check: "MachineConfigPool"
    check_wait_retries: 120
    check_wait_delay: 10
    check_reason: "Apply ICSPs for mirrored catalogs"

- name: "Clean-up the Image Source list"
  set_fact:
    is_files: []

- name: "Create custom catalog sources"
  include_role:
    name: catalog_source
  vars:
    cs_name: "{{ ((catalog | basename).split(':'))[0] }}"
    cs_namespace: "openshift-marketplace"
    cs_image: "{{ catalog }}"
  loop: "{{ custom_catalogs }}"
  loop_control:
    loop_var: catalog
  when:
    - custom_catalogs | default([]) | length
...
