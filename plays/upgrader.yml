---
- name: "upgrader : Get current version"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: oc get clusterversion

- name: "upgrader : Get target openshift version from job.components"
  set_fact:
    target_version: "{{ item['name'] }}"
  with_items: "{{ hostvars.localhost.job_info.job.components }}"
  when: item["type"] == "ocp"

- name: "upgrader : Fetch release digest"
  uri:
    url: "{{ webserver_url }}/{{ target_version }}/release.dig"
    return_content: true
  register: release_digest

- name: "upgrader : Fetch signature for target release"
  get_url:
    url: "{{ webserver_url }}/{{ target_version }}/signature.yaml"
    dest: ~/clusterconfigs/signature-{{ target_version }}.yaml
    mode: 0644

- name: "upgrader : Fetch imagecontentsourcepolicy for target release"
  get_url:
    url: "{{ webserver_url }}/{{ target_version }}/imagecontentsourcepolicy.yaml"
    dest: ~/clusterconfigs/imagecontentsourcepolicy-{{ target_version }}.yaml
    mode: 0644

- name: "upgrader : Apply signatures to cluster"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: oc apply -f ../signature-{{ target_version }}.yaml && sleep 5

- name: "upgrader : Apply imagecontentsourcepolicy to cluster"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: oc apply -f ../imagecontentsourcepolicy-{{ target_version }}.yaml && sleep 5

- name: "upgrader : Wait for machineconfigpools to update"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: >
      for mcp in $(oc get mcp -o name); do
        while ! oc wait --for=condition=updated ${mcp}; do
          sleep 10;
        done;
      done

- name: "upgrader : Wait for nodes to become Ready"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: >
      for node in $(oc get nodes -o name); do
        while ! oc wait --for=condition=Ready ${node}; do
          sleep 10;
        done;
      done

- name: "upgrader : Patch clusterversion to remove channel and skip graph"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: >
      oc patch clusterversion/version
      --patch '{"spec": {"channel": ""}}'
      --type merge

- name: "upgrader : Execute the upgrade"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: >
      oc adm upgrade
      --allow-explicit-upgrade
      --force
      --to-image {{ local_registry }}/{{ local_repo }}@{{ release_digest.content }}

- name: "upgrader : Wait for upgrade to complete"
  shell:
    chdir: "{{ '~' + ansible_user }}/clusterconfigs/auth"
    cmd: >
      oc get clusterversion/version -o json
      | jq -r '.status.history[] | select(.version == "{{ target_version }}").state'
  register: upgrade_progress
  until: upgrade_progress.stdout.find("Completed") > 0
  # wait up to half an hour for the upgrade to complete
  retries: 30
  delay: 60
...
