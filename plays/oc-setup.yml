---
- block:
  - name: Clear out clusterconfigs directory
    file:
      path: ~/clusterconfigs
      state: absent

  - name: Get oc command and KUBECONFIG from provisioner
    delegate_to: "{{ groups['provisioner'][0] }}"
    fetch:
      src: "{{ item }}"
      dest: "{{ dci_cluster_config_dir }}/"
      flat: true
    loop:
    - /usr/local/bin/oc
    - ~/clusterconfigs/auth/kubeconfig

  - name: Install packages needed for login
    package:
      name: "{{ item }}"
      state: present
    become: true
    with_items:
    - httpd-tools

  - name: Create users.htpasswd file with admin adn nonadmin users
    shell: |
      # admin user
      htpasswd -cbB {{ dci_cluster_config_dir }}/users.htpasswd admin admin
      # append nonadmin user
      htpasswd -bB {{ dci_cluster_config_dir }}/users.htpasswd nonadmin nonadmin

  - name: Set the htpasswd config in the cluster
    environment:
      KUBECONFIG: "{{ dci_cluster_config_dir | expanduser }}/kubeconfig"
    shell: |
      {{ dci_cluster_config_dir }}/oc create secret generic htpass-secret --from-file=htpasswd={{ dci_cluster_config_dir | expanduser }}/users.htpasswd --namespace openshift-config --dry-run --output yaml | {{ dci_cluster_config_dir }}/oc apply -f -

  - name: Setup htpasswd auth backend
    environment:
      KUBECONFIG: "{{ dci_cluster_config_dir | expanduser }}/kubeconfig"
    shell: |
      cat << EOF | {{ dci_cluster_config_dir }}/oc apply -f -
      apiVersion: config.openshift.io/v1
      kind: OAuth
      metadata:
        name: cluster
      spec:
        identityProviders:
        - name: htpassidp
          challenge: true
          login: true
          mappingMethod: claim
          type: HTPasswd
          htpasswd:
            fileData:
              name: htpass-secret
      EOF

  - name: Give cluster-admin to the admin user
    environment:
      KUBECONFIG: "{{ dci_cluster_config_dir | expanduser }}/kubeconfig"
    shell: |
      # It can take a few moments for the user to be created...
      {{ dci_cluster_config_dir }}/oc adm policy add-cluster-role-to-user cluster-admin admin

  - name: Login with non-admin user
    environment:
      KUBECONFIG: "{{ dci_cluster_config_dir | expanduser }}/nonadmin_kubeconfig"
    shell: |
      # It can take a few moments for the user to be created...
      {{ dci_cluster_config_dir }}/oc login --insecure-skip-tls-verify=true -u nonadmin -p nonadmin https://api.{{ cluster }}.{{ domain }}:6443
    retries: 10
    delay: 10
    register: result
    until: result.rc == 0

  - name: Get cluster role definition from github in the provisioner
    delegate_to: "{{ groups['provisioner'][0] }}"
    get_url:
      url: "https://raw.githubusercontent.com/e-minguez/ose-tests/master/rbac/osetests-{{ dci_openshift_agent_conformance }}.yaml"
      dest: "/tmp/osetests-{{ dci_openshift_agent_conformance }}.yaml"

  - name: Get cluster role definition from provisioner
    delegate_to: "{{ groups['provisioner'][0] }}"
    fetch:
      src: "/tmp/osetests-{{ dci_openshift_agent_conformance }}.yaml"
      dest: "{{ dci_cluster_config_dir }}/osetests-{{ dci_openshift_agent_conformance }}.yaml"
      flat: true
  
  - name: Remove the cluster role definition file in the provisioner
    delegate_to: "{{ groups['provisioner'][0] }}"
    file:
      path: "/tmp/osetests-{{ dci_openshift_agent_conformance }}.yaml"
      state: absent

  - name: Give the non-admin user the required role
    environment:
      KUBECONFIG: "{{ dci_cluster_config_dir | expanduser }}/kubeconfig"
    shell: |
      {{ dci_cluster_config_dir }}/oc auth reconcile -f {{ dci_cluster_config_dir }}/osetests-{{ dci_openshift_agent_conformance }}.yaml
      # It can take a while for the user to be given the permissions

  - name: Wait for the nonadmin user to reflect permissions
    environment:
      KUBECONFIG: "{{ dci_cluster_config_dir | expanduser }}/kubeconfig"
    shell: |
      # probe for up to 2 minutes (t*sleep time)
      for t in {1..60}; do
        {{ dci_cluster_config_dir }}/oc adm policy who-can '*' namespaces | grep nonadmin && exit 0
        echo "waiting..."
        sleep 2;
      done
      exit 1
