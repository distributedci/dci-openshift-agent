---
# This playbook is executed in the provisioner host

# If not set by operators-mirror then we must not be in disconnected
# mode and should use the default entry for connected mode.
- name: "deploy-operators : Set default redhat-operators"
  set_fact:
    opm_catalog_source_name: "{{ opm_catalog_source_name | default('redhat-operators') }}"

- name: Get oc version output
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  shell: |
    {{ oc_tool_path }} version
  register: oc_version_str
  delegate_to: localhost

- name: Get OCP version
  set_fact:
    ocp_version: "{{ '.'.join(item.split(':')[1].strip().split('.')[0:2]) }}"
    ocp_version_maj: "{{ item.split(':')[1].strip().split('.')[0] }}"
    ocp_version_min: "{{ item.split(':')[1].strip().split('.')[1] }}"
  when: "'Server Version' in item"
  loop: "{{ oc_version_str.stdout_lines }}"

# Configure CatalogSources for disconnected environments
- name: "deploy-operators : Generate disconnected catalogSource"
  import_role:
    name: operators-catalog
  when:
  - dci_disconnected | default(false) | bool
  - opm_mirror_list is defined
  - opm_mirror_list | length

- name: Disable default catalog sources for disconnected deployment
  community.kubernetes.k8s:
    definition:
      apiVersion: config.openshift.io/v1
      kind: OperatorHub
      metadata:
        name: cluster
      spec:
        disableAllDefaultSources: true
  when:
  - dci_disconnected | default(false) | bool

### Begin Deployment of operators required by CNFs
- name: "Deploy operators required by CNFs"
  block:

    # Verify a minimum number of worker nodes are available
    - name: "deploy-operators : Get all nodes"
      k8s_info:
        kind: Node
      register: nodes
      no_log: true

    - name: "deploy-operators : Get worker node count"
      set_fact:
        worker_node_count: "{{ worker_node_count|default(0)|int + 1 }}"
      when: "'node-role.kubernetes.io/worker' in item.metadata.labels"
      loop: "{{ nodes.resources }}"

    - name: "deploy-operators : test_ Check enough worker nodes availability"
      fail:
        msg: "Not enough worker nodes ({{ worker_node_count }}) to perform required tasks"
      when:
        - worker_node_count|int <= 1
        - install_type is undefined or install_type != 'sno'

    - name: "deploy-operators : Increase maxUnavailable count to n-1"
      vars:
        mcp_def: |
          apiVersion: machineconfiguration.openshift.io/v1
          kind: MachineConfigPool
          metadata:
            name: worker
          spec:
            maxUnavailable: {{ hostvars.localhost.groups['workers'] | length - 1 }}
      k8s:
        state: present
        definition: "{{ mcp_def }}"
      when:
      - hostvars.localhost.groups['workers']|length > 1

    - name: "deploy-operators : Install Performace Addon Operator"
      include_role:
        name: olm-operator
      vars:
        operator: performance-addon-operator
        source: "{{ opm_catalog_source_name }}"
        namespace: openshift-performance-addon-operator
        ns_labels:
          openshift.io/cluster-monitoring: "true"
      when:
        - hostvars.localhost.enable_perf_addon|default(true)|bool
        - ocp_version_maj|int == 4
        - ocp_version_min|int <= 10

    - name: "configure-operators : Apply Performace Profile"
      include_tasks: apply-pao-profile.yml
      when:
        - performance_definition is defined

    - name: "deploy-operators : Install and configure SRIOV"
      block:

        - name: "deploy-operators : Install SRIOV operator"
          include_role:
            name: olm-operator
          vars:
            operator: sriov-network-operator
            source: "{{ opm_catalog_source_name }}"
            namespace: openshift-sriov-network-operator
            operator_group_spec:
              targetNamespaces:
                - openshift-sriov-network-operator
            ns_labels:
              openshift.io/run-level: "1"

        - name: "configure-operators : Configure SRIOV operator"
          include_tasks: apply-sriov-config.yml

      when:
        - hostvars.localhost.enable_sriov|default(true)|bool

    - name: "deploy-operators : Reset maxUnavailable count to default value 1"
      k8s:
        definition:
          kind: MachineConfigPool
          metadata:
            name: worker
          spec:
            maxUnavailable: 1

  when: hostvars.localhost.dci_prepare_cnf|bool
### End CNF

### Begin CNV and HCO
- name: "Deploy CNV and HCO Operators"
  block:

    - name: "deploy-operators : Install CNV operator"
      include_role:
        name: olm-operator
      vars:
        operator: kubevirt-hyperconverged
        source: "{{ opm_catalog_source_name }}"
        namespace: openshift-cnv
        operator_group_spec:
          targetNamespaces:
            - openshift-cnv

    - name: "configure-operators : Deploy Hyperconverged Operator"
      include_role:
        name: hco-setup

  when:
    - hostvars.localhost.enable_cnv|default(false)|bool
### End CNV

### Begin Logging Operators deployment
- name: "deploy-operators : Install Eleasticsearch operator"
  include_role:
    name: olm-operator
  vars:
    operator: elasticsearch-operator
    source: "{{ opm_catalog_source_name }}"
    namespace: openshift-operators-redhat
    ns_labels:
      openshift.io/cluster-monitoring: "true"
  when:
    - hostvars.localhost.enable_elasticsearch|default(false)|bool

- name: "deploy-operators : Install Cluster-logging operator"
  include_role:
    name: olm-operator
  vars:
    operator: cluster-logging
    source: "{{ opm_catalog_source_name }}"
    namespace: openshift-logging
    operator_group_spec:
      targetNamespaces:
        - openshift-logging
  when:
    - hostvars.localhost.enable_clusterlogging|default(false)|bool
### End Logging Operators deployment

### Begin Storage Operators
- name: "deploy-operators : Install OCS Operator"
  include_role:
    name: olm-operator
  vars:
    operator: ocs-operator
    source: "{{ opm_catalog_source_name }}"
    namespace: openshift-storage
    ns_labels:
      openshift.io/cluster-monitoring: "true"
    operator_group_spec:
      targetNamespaces:
        - openshift-storage
  when:
    - hostvars.localhost.enable_ocs|default(false)|bool

- name: "deploy-operators : Install LocalStorage Operator"
  include_role:
    name: olm-operator
  vars:
    operator: local-storage-operator
    source: "{{ opm_catalog_source_name }}"
    namespace: openshift-local-storage
    operator_group_spec:
      targetNamespaces:
        - openshift-local-storage
  when:
    - hostvars.localhost.enable_localstorage|default(false)|bool 
### End Storage Operators deployment

### Begin ACM Operator deployment
- name: "deploy-operators : Install the ACM operator"
  include_role:
    name: olm-operator
  vars:
    operator: advanced-cluster-management
    source: "{{ opm_catalog_source_name }}"
    namespace: advanced-cluster-management
    operator_group_spec:
      targetNamespaces:
        - advanced-cluster-management
  when:
    - hostvars.localhost.enable_acm|default(true)|bool
### End ACM Operator deployment

### Custom operators deployments
- name: "deploy-operators : Deploy other operators playbook"
  include_tasks: deploy-custom-operator.yml
  when:
  - dci_operators is defined
  - dci_operators | length
  loop: "{{ dci_operators }}"
  loop_control:
    loop_var: dci_operator
    label: "{{ dci_operator.name }}"

### Begin deploy OCP Custom Resources
- name: "deploy-operators : Create defined Custom Resources"
  include_role:
    name: deploy-cr
  vars:
    api_version: "{{ item.api_version }}"
    kind: "{{ item.kind }}"
    namespace: "{{ item.namespace }}"
    name: "{{ item.name }}"
    spec: "{{ item.spec }}"
  with_list: "{{ hostvars.localhost.dci_ocp_custom_resources }}"
  when:
  - hostvars.localhost.dci_ocp_custom_resources is defined
  - hostvars.localhost.dci_ocp_custom_resources is list
### End Deploy all CRs
...
