---

- name: "Get cluster version"
  community.kubernetes.k8s_info:
    api: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: cluster_version

- name: "Get OCP version"
  vars:
    current_ver_query: "history[?state=='Completed'] | [0].version"
    full_ver: "{{ cluster_version.resources[0].status | json_query(current_ver_query) }}"
    current_ver: "{{ full_ver.split('-')[0] }}"
  set_fact:
    ocp_version: "{{  current_ver }}"
    ocp_version_maj: "{{ current_ver.split('.')[0] }}"
    ocp_version_min: "{{ current_ver.split('.')[1] }}"

- name: "Add custom catalogs"
  include_role:
    name: catalog-source
  vars:
    cs_name: "{{ ((catalog | basename).split(':'))[0] }}"
    cs_namespace: "openshift-marketplace"
    cs_image: "{{ catalog }}"
  loop: "{{ custom_catalogs }}"
  loop_control:
    loop_var: catalog
  when:
    - custom_catalogs | default([]) | length

- name: Configure CatalogSources for disconnected environments
  block:
    - name: "deploy-operators : Generate disconnected catalogSource"
      include_role:
        name: catalog-source
      vars:
        cs_name: "{{ opm_catalog_source_name }}"
        cs_namespace: "{{ opm_catalog_source_namespace }}"
        cs_image: "{{ local_registry }}{{ opm_local_registry_path }}:{{ index_tag }}"
        cs_publisher: "{{ opm_catalog_source_displayname }}"
      when:
        - mirror_list is defined
        - mirror_list | length

    - name: Disable default catalog sources for disconnected deployment
      community.kubernetes.k8s:
        definition:
          apiVersion: config.openshift.io/v1
          kind: OperatorHub
          metadata:
            name: cluster
          spec:
            disableAllDefaultSources: true
  when:
    - dci_disconnected | default(false) | bool

- name: "Enable operators required for CNFs"
  set_fact:
    enable_sriov: true
    enable_perf_addon: true
  when: dci_prepare_cnf | bool

- name: "Deploy operators required by CNFs"
  block:
    - name: "deploy-operators : Get all worker nodes"
      community.kubernetes.k8s_info:
        kind: Node
        label_selectors:
          - "node-role.kubernetes.io/worker"
      register: nodes

    - name: "deploy-operators : test_ Check enough worker nodes availability"
      vars:
        worker_node_count: "{{ nodes.resources | length }}"
      fail:
        msg: "Not enough worker nodes ({{ worker_node_count }}) to perform required tasks"
      when:
        - worker_node_count | int <= 1
        - install_type != 'sno'
        - install_type != 'acm'

    - name: "deploy-operators : Increase maxUnavailable count to n-1"
      vars:
        worker_node_count: "{{ nodes.resources | length }}"
        mcp_def: |
          apiVersion: machineconfiguration.openshift.io/v1
          kind: MachineConfigPool
          metadata:
            name: worker
          spec:
            maxUnavailable: {{ worker_node_count | int - 1 }}
      community.kubernetes.k8s:
        state: present
        definition: "{{ mcp_def }}"
      when:
        - worker_node_count | int > 1

    - name: "deploy-operators : Override Red Hat catalog in connected"
      include_role:
        name: catalog-source
      vars:
        cs_name: "redhat-operators"
        cs_namespace: "openshift-marketplace"
        cs_image: "{{ operators_index }}"
        cs_publisher: "Red Hat"
      when:
        - operators_index is defined
        - not dci_disconnected | default(false) | bool

    - name: "deploy-operators : Install Performance Addon Operator"
      block:
        - name: "deploy-operators : Install Performance Addon Operator"
          include_role:
            name: olm-operator
          vars:
            operator: performance-addon-operator
            source: "{{ opm_catalog_source_name }}"
            namespace: openshift-performance-addon-operator
            ns_labels:
              openshift.io/cluster-monitoring: "true"
      when:
        - enable_perf_addon | bool
        - ocp_version is version("4.11", "<")

    - name: "deploy-operators : Install and configure SRIOV"
      block:
        - name: "deploy-operators : Install SRIOV operator"
          include_role:
            name: olm-operator
          vars:
            operator: sriov-network-operator
            source: "{{ upstream_source_catalog_name | default(opm_catalog_source_name) }}"
            namespace: openshift-sriov-network-operator
            operator_group_spec:
              targetNamespaces:
                - openshift-sriov-network-operator
            ns_labels:
              openshift.io/run-level: "1"

        - name: "configure-operators : Configure SRIOV operator"
          include_tasks: apply-sriov-config.yml

      when:
        - enable_sriov | bool

    - name: "deploy-operators : Reset maxUnavailable count to default value 1"
      community.kubernetes.k8s:
        definition:
          kind: MachineConfigPool
          metadata:
            name: worker
          spec:
            maxUnavailable: 1
  when: >
    (dci_prepare_cnf | bool) or
    (enable_perf_addon | bool ) or
    (enable_sriov | bool)

- name: Validate if the Performance Profile CRD is present
  community.kubernetes.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: performanceprofiles.performance.openshift.io
  register: perf_profile_crd

- name: "configure-operators : Apply Performance Profile"
  include_tasks: apply-pao-profile.yml
  when:
    - performance_definition is defined
    - perf_profile_crd.resources|length > 0

- name: "Deploy CNV and HCO Operators"
  block:
    - name: "deploy-operators : Install CNV operator"
      include_role:
        name: olm-operator
      vars:
        operator: kubevirt-hyperconverged
        source: "{{ opm_catalog_source_name }}"
        namespace: openshift-cnv
        operator_group_spec:
          targetNamespaces:
            - openshift-cnv

    - name: "configure-operators : Deploy Hyperconverged Operator"
      include_role:
        name: hco-setup

  when:
    - enable_cnv | bool

- name: "deploy-operators : Install Elasticsearch operator"
  include_role:
    name: olm-operator
  vars:
    operator: elasticsearch-operator
    source: "{{ opm_catalog_source_name }}"
    namespace: openshift-operators-redhat
    ns_labels:
      openshift.io/cluster-monitoring: "true"
  when:
    - enable_elasticsearch | bool

- name: "deploy-operators : Install Cluster-logging operator"
  include_role:
    name: olm-operator
  vars:
    operator: cluster-logging
    source: "{{ opm_catalog_source_name }}"
    namespace: openshift-logging
    operator_group_spec:
      targetNamespaces:
        - openshift-logging
  when:
    - enable_clusterlogging | bool

- name: ODF Installation and setup
  block:
    - name: "deploy-operators : Install OCS Operator"
      include_role:
        name: olm-operator
      vars:
        operator: ocs-operator
        source: "{{ opm_catalog_source_name }}"
        namespace: openshift-storage
        ns_labels:
          openshift.io/cluster-monitoring: "true"
        operator_group_spec:
          targetNamespaces:
            - openshift-storage
      when:
        - enable_ocs | bool

    - name: "deploy-operators : Install LocalStorage Operator"
      include_role:
        name: olm-operator
      vars:
        operator: local-storage-operator
        source: "{{ opm_catalog_source_name }}"
        namespace: openshift-local-storage
        operator_group_spec:
          targetNamespaces:
            - openshift-local-storage
      when:
        - enable_lso | bool

    - name: "configure-operators : Deploy ODF Operators"
      include_role:
        name: odf-setup

  when: (enable_lso | bool) or (enable_ocs | bool)

- name: "Deploy and configure the Advanced Cluster Manager"
  vars:
    acm_namespace: open-cluster-management
    acm_instance: multiclusterhub
  block:
    - name: "deploy-operators : Install the ACM operator"
      include_role:
        name: olm-operator
      vars:
        operator: advanced-cluster-management
        source: "{{ opm_catalog_source_name }}"
        namespace: "{{ acm_namespace }}"
        operator_group_spec:
          targetNamespaces:
            - "{{ acm_namespace }}"
  when:
    - enable_acm | bool

- name: "deploy-operators : Deploy other operators playbook"
  include_tasks: deploy-custom-operator.yml
  when:
    - dci_operators is defined
    - dci_operators | length
  loop: "{{ dci_operators }}"
  loop_control:
    loop_var: dci_operator
    label: "{{ dci_operator.name }}"

- name: "deploy-operators : Create defined Custom Resources"
  include_role:
    name: deploy-cr
  vars:
    api_version: "{{ item.api_version }}"
    kind: "{{ item.kind }}"
    namespace: "{{ item.namespace }}"
    name: "{{ item.name }}"
    spec: "{{ item.spec }}"
  with_list: "{{ dci_ocp_custom_resources }}"
  when:
    - dci_ocp_custom_resources is defined
    - dci_ocp_custom_resources is list
...
