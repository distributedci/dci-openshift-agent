#!/bin/bash
#
# Copyright (C) 2020-2023 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# Description: A shell script that collects logs from the infrastructure components
# used by the IPI installer
# It requires connections details for the provisioner host and the cluster servers

set -x

if [ $# -lt 3 ]; then
    echo "Usage: $0 <provisioner_user@<provisioner_host> <log_dir_dir> <servers>" 1>&2
    echo "Eg: kni@provisioner.lab /tmp/logs master-0.cluster.lab master-1.cluster.lab master-2.cluster.lab"
    exit 1
fi

user_at_provisioner=$1
log_dir="$2"
prov_cmd="timeout -v 20m ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR ${user_at_provisioner}"
ssh_ops="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR"

# Copy openshift install log_dir and rendered install config
scp "${ssh_ops}" "${user_at_provisioner}":clusterconfigs/.openshift_install.log "${log_dir}/openshift_install.log"
scp "${ssh_ops}" "${user_at_provisioner}":clusterconfigs/install-config.yaml.bkup "${log_dir}/install-config-yaml.txt"

# Get IP from Bootstrap VM if it's running
vm=$(LANG=en_US.UTF-8 ${prov_cmd} sudo virsh list | awk '/.*-bootstrap\s+running/ {print $2}')
ip=$(${prov_cmd} sudo virsh domifaddr --source arp "${vm}" 2>/dev/null | grep -m1 -oP '(\d{1,3}\.){3}\d{1,3}')
domain=$(${prov_cmd} hostname -d)

shift 2
# Removing domain name
nodes=()
for name in "$@"; do
  host_name=$(echo "$name" | cut -d"." -f1)
  nodes+=("${host_name}")
done

# Gather host's journals
for h in "${nodes[@]}"; do
  ${prov_cmd} ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o logLevel=ERROR \
    core@"${h}.${domain}" sudo journalctl --all > "${log_dir}/journal-${h}.log"
done

# Collect logs from bootstrap VM if available
if [ -n "${ip}" ]; then
  echo "found VM IPv4 $ip"

  # Installer logs
  for master in "${nodes[@]}"; do
    master_param+=" --master $master.$domain"
  done

  # Collect the bootstrap logs
  ${prov_cmd} openshift-baremetal-install gather bootstrap --dir=/tmp/gatherBootstrap --bootstrap "${ip} ${master_param}"
  scp "${ssh_ops}" "${user_at_provisioner}:/tmp/gatherBootstrap/*" "${log_dir}"

  core="ssh ${ssh_ops} core@$ip"

  # Collect services logs
  for serv in release-image bootkube; do
    $prov_cmd "${core}" journalctl -b -u $serv.service > "${log_dir}"/$serv.log
  done

  # Log for  dnsmasq, httpd, ironic-api, ironic-conductor, ironic-inspector pods
  for pod in $(${prov_cmd} "${core}" sudo podman ps -a 2>&1 | sed 's/.* //'|grep -Ev '^(hosts\.|NAMES$)'); do
    $prov_cmd "${core}" sudo podman logs "${pod}" >> "${log_dir}/${pod}.log" 2>&1
  done
fi
