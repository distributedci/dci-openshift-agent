#!/bin/bash
#
# Copyright (C) 2023 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# Description: A shell script that collects logs from the infrastructure components
# used by the Assisted installer
# It requires connections details for the cluster servers

# example from IPI for output testing:
# https://www.distributed-ci.io/jobs/1d7fe8ef-ee98-4b08-96ff-20070f86ce4f/jobStates?sort=date&task=01ed92e6-11ab-481b-b1c6-3839ca12cf1d

set -x

# Usage
if [ $# -lt 3 ]; then
    echo "Usage: $0 <bootstrap_host> <log_dir_dir> <servers>" 1>&2
    echo "Eg: $0 bootstrap.lab /tmp/logs master-0.cluster.lab master-1.cluster.lab master-2.cluster.lab"
    exit 1
fi

# Parse two first arguments
bootstrap_ip_address=$1
log_dir="$2"

# Extra variables
ssh_user="core"
ssh_ops="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR -o ConnectTimeout=10"
bootstrap_ssh="ssh ${ssh_ops} ${ssh_user}@${bootstrap_ip_address}"

# Build the list of nodes that compose the cluster, based on last arguments
domain=$(${bootstrap_ssh} hostname -d)
shift 2
# Removing domain name if the hostname contains it
nodes=()
for name in "$@"; do
  host_name=$(echo "$name" | cut -d"." -f1)
  nodes+=("${host_name}")
done

# Bootstrap VM, if available, is deployed in master-0. The bootstrap_host var should point to that server
# and bootstrap services should be available
echo "Collect logs from bootstrap VM if it is already in place"
debug1=$("${bootstrap_ssh}" sudo podman ps -a)
echo $debug1
debug2=$(${bootstrap_ssh} sudo podman ps -a)
echo $debug2
assisted_installer_present=$("${bootstrap_ssh}" sudo podman ps -a | grep assisted-installer | wc -l)

if [ "$assisted_installer_present" -ne "0" ]; then
  # Installer logs
  nodes_param=""
  for node in "${nodes[@]}"; do
    if [[ "$node" == *"master"* ]]; then
      nodes_param+=" --master $node.$domain"
    fi
  done

  # Collect the bootstrap logs
  # NOT WORKING, COMMENTING THIS LINE FOR THE MOMENT
  # openshift-install gather bootstrap --dir=${log_dir} --bootstrap "${bootstrap_host} ${nodes_param}"

  # Collect services logs
  for serv in release-image bootkube; do
    "${bootstrap_ssh}" journalctl -b -u $serv.service > "${log_dir}"/$serv.log
  done

  # Log for different pods launched during assisted installation
  for pod in $("${bootstrap_ssh}" sudo podman ps -a 2>&1 | sed 's/.* //'|grep -Ev '^(hosts\.|NAMES$)'); do
    "${bootstrap_ssh}" sudo podman logs "${pod}" >> "${log_dir}/${pod}.log" 2>&1
  done
else
  echo "No bootstrap logs found in rendezvous node"
fi

echo "Gather host's journals"

for h in "${nodes[@]}"; do
  ssh ${ssh_ops} core@"${h}.${domain}" 'sudo journalctl --all --since \"4 hours ago\"' > "${log_dir}/journal-${h}.log"
done
