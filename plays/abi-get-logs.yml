---
- name: "Get generated config files from ABI deployment"
  ignore_errors: true
  block:
    - name: Copy openshift_install.log file in log folder
      ansible.builtin.copy:
        src: "{{ repo_root_path }}/generated/{{ cluster_name }}/.openshift_install.log"
        dest: "{{ job_logs.path }}/openshift_install.log"
        mode: '0644'

    - name: Copy openshift_install_state.json file in log folder
      ansible.builtin.copy:
        src: "{{ repo_root_path }}/generated/{{ cluster_name }}/.openshift_install_state.json"
        dest: "{{ job_logs.path }}/openshift_install_state.json"
        mode: '0644'

    - name: Copy agent-config.yaml file in log folder
      ansible.builtin.copy:
        src: "{{ repo_root_path }}/fetched/agent-config.yaml"
        dest: "{{ job_logs.path }}/agent-config.yaml"
        mode: '0644'

    - name: Copy install-config.yaml file in log folder
      ansible.builtin.copy:
        src: "{{ repo_root_path }}/fetched/install-config.yaml"
        dest: "{{ job_logs.path }}/install-config.yaml"
        mode: '0644'

- name: "Get Rendezvouz logs from deployment"
  environment:
    OPENSHIFT_INSTALL_BINARY: "{{ repo_root_path }}/extract/openshift-install"
  vars:
    agent_based_installer_bootstrap_node: "{{ groups['masters'][0] }}"
    host_ip_keyword: ansible_host
    rendezvous_ip_address: "{{ hostvars[agent_based_installer_bootstrap_node][host_ip_keyword] }}"
    domain_name: "{{ cluster_name }}.{{ base_dns_domain }}"
  ansible.builtin.shell:
    cmd: >
      {{ scripts_dir.files[0].path }}/get-abi-logs
      {{ rendezvous_ip_address }}
      {{ domain_name }}
      {{ job_logs.path }}
      {{ groups['nodes'] | join (' ') }}
  ignore_errors: true
  when: lookup('pipe', 'test -f {{'~/clusterconfigs'}}-{{ cluster_name }}/kubeconfig  && echo true || echo false') == "true"

- name: Upload to DCI remaining logs from previous jobs
  block:
    - name: Find log-bundle compressed file generated by ABI
      ansible.builtin.find:
        paths: "{{ repo_root_path }}"
        recurse: true
        patterns: "log-bundle-*"
      register: abi_logs_matched

    - name: "Upload ABI logs"
      vars:
        mime_type: "application/x-gzip"
      ansible.builtin.include_tasks: upload-log.yml
      with_items: "{{ abi_logs_matched.files }}"
...
