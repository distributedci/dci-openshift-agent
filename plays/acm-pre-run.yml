---
- name: Include installed software as components
  vars:
    mandatory_rpms:
      - ansible
      - ansible-collection-redhatci-ocp
      - dci-ansible
      - dci-openshift-agent
      - dci-pipeline
      - python3-dciclient
      - python3-kubernetes
      - python3-openshift
    ic_rpms: "{{ (dci_rpms_to_components + mandatory_rpms)|flatten }}"
    ic_gits: "{{ dci_gits_to_components|flatten }}"
    ic_dev_gits: "{{ dev_gits_to_components|flatten }}"
  ansible.builtin.include_role:
    name: redhatci.ocp.include_components
    apply:
      delegate_to: localhost

- name: "Create component for GitOps repository"
  dci_component:
    display_name: "GitOps Sites"
    version: "{{ dci_gitops_sites_repo.branch | default('main') }}"
    type: "gitops-sites"
    url: "{{ dci_gitops_sites_repo.url }}"
    team_id: "{{ job_info['job']['team_id'] }}"
    topic_id: "{{ job_info['job']['topic_id'] }}"
    state: present
  register: gitops_repo_component
  ignore_errors: true
  when:
    - dci_gitops_sites_repo.url | default('') | length
  delegate_to: localhost

- name: "Attach GitOps Sites component to the job"
  dci_job_component:
    component_id: "{{ gitops_repo_component.component.id }}"
    job_id: "{{ job_id }}"
  register: job_component_result
  until: job_component_result is not failed
  retries: 5
  delay: 20
  when:
    - "'component' in gitops_repo_component"
    - "'id' in gitops_repo_component.component"
  ignore_errors: true
  delegate_to: localhost

- name: "Get cluster pull-secret"
  ansible.builtin.include_tasks: get-cluster-pullsecret.yml

- name: "Get registry mirror registry details"
  when:
    - dci_disconnected | default(false) | bool
    - acm_cluster_type | default('') in ['ztp-spoke-clusterinstance', 'sno', 'hypershift', 'ztp-spoke', 'SNO', 'HostedControlPlane, 'HighAvailable']

  block:
    - name: Check if IDMS is supported
      kubernetes.core.k8s_info:
        kind: CustomResourceDefinition
        name: imagedigestmirrorsets.config.openshift.io
      register: idms_res
      no_log: true

    - name: "Get Hub Image Source Type"
      kubernetes.core.k8s_info:
        api_version: "{{ idms_res.resources is defined and idms_res.resources | length | ternary('config.openshift.io/v1', 'operator.openshift.io/v1alpha1') }}"
        kind: "{{ idms_res.resources is defined and idms_res.resources | length | ternary('ImageDigestMirrorSet', 'ImageContentSourcePolicy') }}"
      register: hub_is
      no_log: true

    - name: "Set hub_registry location"
      vars:
        hub_query: "spec.*[*].mirrors[0]"
      ansible.builtin.set_fact:
        hub_registry: "docker://{{ hub_is.resources[0] | json_query(hub_query) | flatten | first }}"

    - name: "Set the path for the OCP release"
      ansible.builtin.set_fact:
        ocp_release_path: >-
          {%- if acm_cluster_type != 'hypershift' -%}
          {{ acm_local_repo | default('ocp-' + version.split('.')[:2] | join('.') + '/' + version, true) }}
          {%- elif acm_cluster_type == 'hypershift' -%}
          {{ hub_registry | regex_replace('^.*?://[^/]+(:[0-9]+)?/', '') }}
          {%- endif -%}

    - name: "Set hub mirrors"
      vars:
        hub_mirrors_type: "resources[*].spec.*[*].{mirrors: mirrors, source: source}"
      ansible.builtin.set_fact:
        hub_mirrors: "{{ hub_is | json_query(hub_mirrors_type) | flatten }}"
      when: hub_is | length > 0
      no_log: true

    - name: "Print webserver_url"
      ansible.builtin.debug:
        msg: "{{ hostvars.jumphost.webserver_url }}"
      when:
        - hostvars.jumphost.webserver_url is defined

    - name: "Validate webserver_url variable is defined"
      ansible.builtin.assert:
        that:
          - hostvars.jumphost.webserver_url | string
          - (hostvars.jumphost.webserver_url | urlsplit('scheme')) in ('http', 'https',)

    - name: "Mirror OCP release artifacts - Disconnected"
      ansible.builtin.include_role:
        name: redhatci.ocp.mirror_ocp_release
      vars:
        mor_version: "{{ version }}"
        mor_pull_url: "{{ version_pull_url }}"
        mor_cache_dir: "{{ provision_cache_store | default((ansible_env.HOME, 'releases') | join('/')) }}"
        mor_webserver_url: "{{ hostvars.jumphost.webserver_url | default(None) }}"
        mor_registry_url: "{{ hub_registry | urlsplit('netloc') }}"
        mor_registry_path: "{{ ocp_release_path }}"
        mor_auths_file: "{{ dci_pullsecret_file }}"
        mor_force: false
        mor_install_type: "{{ (install_type | default('ipi')) }}"
        mor_mirror_disk_images: "{{ dci_disconnected | default(False) | bool }}"
        mor_mirror_container_images: "{{ dci_disconnected | default(False) | bool }}"
        mor_build: "{{ build }}"
        mor_oc: "{{ oc_tool_path }}"

    - name: Convert Image Source to registries.conf format
      vars:
        img_src_paths:
          - "{{ provision_cache_store }}/{{ version }}/imagesource.yaml"
          - "{{ provision_cache_store }}/{{ version }}/imagecontentsourcepolicy.yaml"
        utils_hub_mirrors: "{{ hub_mirrors }}"
        utils_imagesource_file: "{{ lookup('first_found', img_src_paths) }}"
        utils_registry: "{{ hub_registry }}"
      ansible.builtin.include_role:
        name: redhatci.ocp.acm.utils
        tasks_from: image-sources
      when:
        - acm_cluster_type | default('') in ['ztp-spoke-clusterinstance','sno', 'SNO', 'HostedControlPlane', 'HighAvailable']

    - name: "Set facts for install via ACM - disconnected"
      ansible.builtin.set_fact:
        acm_metal_iso_location: "{{ hostvars.jumphost.webserver_url }}/{{ ocp_release_data['rhcos_images']['metal_iso_location'] | basename }}"
        acm_rootfs_url: "{{ hostvars.jumphost.webserver_url }}/{{ ocp_release_data['rhcos_images']['metal_pxe_rootfs_location'] | basename }}"
        acm_release_image: "{{ hub_registry | urlsplit('netloc') }}/{{ ocp_release_path }}:{{ version }}"
        dci_local_registry: "{{ hub_registry | urlsplit('netloc') }}"

    - name: "Mirror must gather images"
      ansible.builtin.include_role:
        name: redhatci.ocp.mirror_images
      vars:
        mi_images: "{{ dci_must_gather_images | default(['registry.redhat.io/openshift4/ose-must-gather']) }}"
        mi_authfile: "{{ dci_pullsecret_file }}"
        mi_registry: "{{ dci_local_registry }}"

- name: "Get OCP release artifacts"
  when:
    - not (dci_disconnected | default(false) | bool)
    - acm_cluster_type | default('') in ['ztp-spoke-clusterinstance', 'sno', 'hypershift', 'ztp-spoke', 'SNO', 'HostedControlPlane', 'HighAvailable']
  block:
    - name: Mirror release
      ansible.builtin.include_role:
        name: redhatci.ocp.mirror_ocp_release
      vars:
        mor_version: "{{ version }}"
        mor_pull_url: "{{ version_pull_url }}"
        mor_cache_dir: "{{ provision_cache_store | default((ansible_env.HOME, 'releases') | join('/')) }}"
        mor_auths_file: "{{ dci_pullsecret_file }}"
        mor_force: true
        mor_install_type: "{{ (install_type | default('ipi')) }}"
        mor_mirror_disk_images: false
        mor_mirror_container_images: false
        mor_write_custom_config: false
        mor_build: "{{ build }}"
        mor_oc: "{{ oc_tool_path }}"

    - name: "Set facts for install via ACM - connected"
      ansible.builtin.set_fact:
        acm_metal_iso_location: "{{ ocp_release_data.rhcos_images.metal_iso_location }}"
        acm_rootfs_url: "{{ ocp_release_data.rhcos_images.metal_pxe_rootfs_location }}"
        acm_release_image: "{{ ocp_release_data['container_image'] | quote }}"
...
