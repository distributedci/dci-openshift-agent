---
- name: "Get registry mirror registry details"
  block:
    - name: "Get Hub ICSP"
      community.kubernetes.k8s_info:
        api_version: operator.openshift.io/v1alpha1
        kind: ImageContentSourcePolicy
      register: hub_icsp

    - name: "Set hub_registry location"
      set_fact:
        hub_registry: "docker://{{ hub_icsp.resources[0].spec.repositoryDigestMirrors[0].mirrors[0] }}"

    - name: "Get hub cluster config"
      community.kubernetes.k8s_info:
        kind: ConfigMap
        namespace: kube-system
        name: cluster-config-v1
        kubeconfig: "{{ hub_kubeconfig_path }}"
      register: hub_config

    - name: "Set webserver URL"
      vars:
        cluster_install_info: |-
          {{ ( hub_config.resources[0].data |
          from_yaml )['install-config'] |
          from_yaml }}
      set_fact:
        hub_webserver: "{{ cluster_install_info.platform.baremetal.bootstrapOSImage | urlsplit('scheme') }}://{{ cluster_install_info.platform.baremetal.bootstrapOSImage | urlsplit('netloc') }}"
      when:
        - hub_config | length
  when:
    - dci_disconnected | default(false) | bool

- name: "Get cluster pull-secret"
  include_tasks: get-cluster-pullsecret.yml

- name: "Mirror OCP release artifacts"
  vars:
    version_core: "{{ version.split('.')[:2] | join('.') }}"
  block:
    - name: "Mirror OCP release artifacts - Disconnected"
      include_role:
        name: mirror-ocp-release
      vars:
        mor_version: "{{ version }}"
        mor_pull_url: "{{ version_pull_url }}"
        mor_cache_dir: "{{ provision_cache_store | default((ansible_env.HOME, 'releases') | join('/')) }}"
        mor_webserver_url: "{{ hub_webserver_url | default(None) }}"
        mor_registry_url: "{{ hub_registry | urlsplit('netloc') }}"
        mor_auths_file: "{{ dci_pullsecret_file }}"
        mor_force: false
        mor_install_type: "{{ install_type }}"
        mor_mirror_disk_images: "{{ dci_disconnected | default(False) | bool }}"
        mor_mirror_container_images: "{{ dci_disconnected | default(False) | bool }}"
        mor_write_custom_config: false
        mor_build: "{{ build }}"
        mor_oc: "{{ oc_tool_path }}"

    - name: "Convert ICSP to registries.conf format"
      vars:
        icsp_path: "{{ provision_cache_store }}/{{ version }}/imagecontentsourcepolicy.yaml"
        registries: >
          {{ lookup('file', icsp_path ) |
             from_yaml |
             json_query('spec.repositoryDigestMirrors[*].{ mirrors: mirrors[0], source: source  }')
          }}
      set_fact:
        acm_registries: |
          unqualified-search-registries = ["registry.access.redhat.com", "docker.io"]
          short-name-mode = ""

          {% for registry in registries %}
          [[registry]]
            prefix = ""
            location = "{{ registry.source }}"
            mirror-by-digest-only = true

            [[registry.mirror]]
              location = "{{ registry.mirrors }}"

          {% endfor %}

          [[registry]]
            prefix = ""
            location = "registry.redhat.io/multicluster-engine"
            mirror-by-digest-only = true

            [[registry.mirror]]
              location = "{{ hub_registry | urlsplit('netloc') }}/multicluster-engine"

    - name: "Set facts for install via ACM - disconnected"
      set_fact:
        acm_metal_iso_location: "{{ hub_webserver }}/{{ ocp_release_data['rhcos_images']['metal_iso_location'] | basename }}"
        acm_rootfs_url: "{{ hub_webserver }}/{{ ocp_release_data['rhcos_images']['metal_pxe_rootfs_location'] | basename }}"
        acm_release_image: "{{ hub_registry | urlsplit('netloc') }}/{{ 'ocp-'+version_core+'/'+version }}:{{ version }}"
        dci_local_registry: "{{ hub_registry | urlsplit('netloc') }}"

    - name: "Mirror must gather images"
      include_role:
        name: mirror_images
      vars:
        images: "{{ dci_must_gather_images | default(['registry.redhat.io/openshift4/ose-must-gather']) }}"
        authfile: "{{ dci_pullsecret_file }}"

  when:
    - dci_disconnected | default(false) | bool

- name: "Get OCP release artifacts"
  block:
    - name: Mirror release
      include_role:
        name: mirror-ocp-release
      vars:
        mor_version: "{{ version }}"
        mor_pull_url: "{{ version_pull_url }}"
        mor_cache_dir: "{{ provision_cache_store | default((ansible_env.HOME, 'releases') | join('/')) }}"
        mor_webserver_url: "{{ hub_webserver_url | default(None) }}"
        mor_registry_url: "{{ hub_registry }}"
        mor_auths_file: "{{ dci_pullsecret_file }}"
        mor_force: true
        mor_install_type: "{{ install_type }}"
        mor_mirror_disk_images: false
        mor_mirror_container_images: false
        mor_write_custom_config: false
        mor_build: "{{ build }}"
        mor_oc: "{{ oc_tool_path }}"

    - name: "Set facts for install via ACM - connected"
      set_fact:
        acm_metal_iso_location: "{{ ocp_release_data.rhcos_images.metal_iso_location }}"
        acm_rootfs_url: "{{ ocp_release_data.rhcos_images.metal_pxe_rootfs_location }}"
        acm_release_image: "{{ ocp_release_data['container_image'] | quote }}"
  when:
    - not (dci_disconnected | default(false) | bool)
...
