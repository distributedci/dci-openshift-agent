---
- name: "Wait 30 seconds for operators to stabilize"
  pause:
    seconds: 30

- name: "Check cluster info"
  community.kubernetes.k8s_info:
    kind: ClusterOperator
  register: clusteroperator_info

- name: "Fail if there are degraded cluster-operators - {{ version }}"
  vars:
    operator_conditions: "{{ clusteroperator_info.resources | json_query('[*].status.conditions') }}"
  #   operator_last_conditions: "{{ operator_conditions | map('sort', attribute='lastTransitionTime') | map('last') }}"
  #   operator_names: "{{ clusteroperator_info.resources | json_query('[*].metadata.name') }}"
  #   operator_to_last_condition: "{{ operator_last_conditions | zip(operator_names) }}"
  set_fact:
    operator_last_conditions: "{{ operator_conditions | map('sort', attribute='lastTransitionTime') | map('last') }}"
    operator_names: "{{ clusteroperator_info.resources | json_query('[*].metadata.name') }}"
    # operator_to_last_condition: "{{ operator_last_conditions | zip(operator_names) }}"
  #   degraded_operators: >-
  #     {{
  #       operator_to_last_condition | from_json |
  #       selectattr('0.type', 'eq', 'Degraded') |
  #       selectattr('0.status', 'eq', 'True') |
  #       list
  #     }}
  # failed_when: degraded_operators | length > 0

- name: "Check that control-plane nodes are ready"
  community.kubernetes.k8s_info:
    kind: Node
    label_selectors:
      - "node-role.kubernetes.io/master"
  register: nodes_info
  vars:
    status_query: "resources[*].status.conditions[?type=='Ready'].status"
    nodes_status: "{{ nodes_info | json_query(status_query) | flatten | unique }}"
  until:
    - nodes_status == ['True']
  retries: 3
  delay: 10

- name: "Check that Worker nodes are ready"
  community.kubernetes.k8s_info:
    kind: Node
    label_selectors:
      - "node-role.kubernetes.io/worker"
  register: nodes_info
  vars:
    status_query: "resources[*].status.conditions[?type=='Ready'].status"
    nodes_status: "{{ nodes_info | json_query(status_query) | flatten | unique }}"
  until:
    - nodes_status == ['True']
  retries: 6
  delay: 10

- name: "Get cluster version information"
  community.kubernetes.k8s_info:
    kind: ClusterVersion
    name: version
  register: cluster_version
  until: "'resources' in cluster_version and cluster_version.resources != []"
  retries: 3
  delay: 10

- name: "Fail if cluster installation/upgrade is not Complete"
  vars:
    upgrade_state: "{{ cluster_version | json_query('resources[0].status.history[0].state') }}"
  fail:
    msg: "Install or upgrade is not Completed"
  when:
    upgrade_state != "Completed"
  retries: 3
  delay: 10

- name: "Check machine-config clusteroperator latest status"
  community.kubernetes.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterOperator
    name: machine-config
  register: co
  retries: 120
  delay: 10
  until:
    - co | json_query('resources[*].status.conditions[]')| sort(attribute='lastTransitionTime') | last | json_query('status')

- name: "Get Machine Config Pools status"
  community.kubernetes.k8s_info:
    api_version: machineconfiguration.openshift.io/v1
    kind: MachineConfigPool
  register: reg_mcpool_status
  vars:
    status_query: "resources[*].status.conditions[?type=='Updated'].status"
    update_status: "{{ reg_mcpool_status | json_query(status_query) | flatten | unique }}"
  until:
    - reg_mcpool_status.resources is defined
    - update_status == ['True']
  retries: 180
  delay: 10
...
