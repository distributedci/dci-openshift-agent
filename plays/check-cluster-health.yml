---
- name: "Check cluster operators status"
  vars:
    status_check: Degraded
  block:
    - name: "Fail if there are degraded cluster-operators"
      kubernetes.core.k8s_info:
        kind: ClusterOperator
      register: clusteroperator_info
      vars:
        status_query: "resources[*].status.conditions[?type=='{{ status_check }}'].status"
        cluster_operators_degraded: "{{ clusteroperator_info | json_query(status_query) | flatten | unique }}"
      until: "'True' not in cluster_operators_degraded"
      retries: 12
      delay: 10
  rescue:
    - name: "Some Cluster operators are degraded"
      vars:
        degraded_operators: "{{ clusteroperator_info | json_query(query) }}"
        query: "resources[?status.conditions[?type=='{{ status_check }}' && status=='True']].
                {name: metadata.name, message: status.conditions[?type=='{{ status_check }}'].message}"
      fail:
        msg: "The following Cluster Operators are degraded {{ degraded_operators }}"

- name: "Check that control-plane nodes are ready"
  kubernetes.core.k8s_info:
    kind: Node
    label_selectors:
      - "node-role.kubernetes.io/master"
  register: nodes_info
  vars:
    status_query: "resources[*].status.conditions[?type=='Ready'].status"
    nodes_status: "{{ nodes_info | json_query(status_query) | flatten | unique }}"
  until:
    - nodes_status == ['True']
  retries: 3
  delay: 10

- name: "Check that Worker nodes are ready"
  kubernetes.core.k8s_info:
    kind: Node
    label_selectors:
      - "node-role.kubernetes.io/worker"
  register: nodes_info
  vars:
    status_query: "resources[*].status.conditions[?type=='Ready'].status"
    nodes_status: "{{ nodes_info | json_query(status_query) | flatten | unique }}"
  until:
    - nodes_status == ['True']
  retries: 20
  delay: 30

- name: "Get cluster version information"
  kubernetes.core.k8s_info:
    kind: ClusterVersion
    name: version
  register: cluster_version
  until: "'resources' in cluster_version and cluster_version.resources != []"
  retries: 3
  delay: 10

- name: "Fail if cluster installation/upgrade is not Complete"
  vars:
    upgrade_state: "{{ cluster_version | json_query('resources[0].status.history[0].state') }}"
  fail:
    msg: "Install or upgrade is not Completed"
  when:
    upgrade_state != "Completed"
  retries: 3
  delay: 10

- name: "Check machine-config clusteroperator latest status"
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterOperator
    name: machine-config
  register: co
  retries: 120
  delay: 10
  until:
    - co | json_query('resources[*].status.conditions[]')| sort(attribute='lastTransitionTime') | last | json_query('status')

- name: "Get Machine Config Pools status"
  kubernetes.core.k8s_info:
    api_version: machineconfiguration.openshift.io/v1
    kind: MachineConfigPool
  register: reg_mcpool_status
  vars:
    status_query: "resources[*].status.conditions[?type=='Updated'].status"
    update_status: "{{ reg_mcpool_status | json_query(status_query) | flatten | unique }}"
  until:
    - reg_mcpool_status.resources is defined
    - update_status == ['True']
  retries: 180
  delay: 10
...
