---

- include_tasks: before-install.yml

- name: "installer: Check if .cache directory exists"
  stat:
    path: "{{ ansible_user_dir }}/.cache"
  register: cache_directory

- name: "installer: Cleanup old images"
  block:
    - name: "installer: Retrieve images older than max_images_age"
      find:
        paths: "{{ ansible_user_dir }}/.cache/openshift-installer/image_cache"
        file_type: file
        age: "{{ max_images_age | default('4w') | string }}"
        recurse: no
        use_regex: yes
      register: old_images_to_delete

    - name: "installer: Delete images older than max_images_age"
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_images_to_delete.files }}"
  when:
    - cleanup_old_images | default(false) | bool
    - cache_directory.stat.exists

- name: "installer : Populate clusterosimage"
  set_fact:
    clusterosimage: "{{ hostvars.localhost.clusterosimage }}"
  when: hostvars.localhost.clusterosimage is defined

- name: "installer : Populate bootstraposimage"
  set_fact:
    bootstraposimage: "{{ hostvars.localhost.bootstraposimage }}"
  when: hostvars.localhost.bootstraposimage is defined

- name: "installer : Node preparation"
  import_role:
    name: node-prep
  vars:
    release_url: "{{ (webserver_url|length) | ternary(webserver_url, '/'.join(hostvars.localhost.url.split('/')[:-1])) }}"

- name: "installer : Run IPI installer"
  import_role:
    name: installer
  vars:
    release_url: "{{ (webserver_url|length) | ternary(webserver_url, '/'.join(hostvars.localhost.url.split('/')[:-1])) }}"
...
