---
- block:
  - name: Generate temp dir to hold the images
    tempfile:
      state: directory
      suffix: podman-images
    register: imagedir

  - name: Pull all images down to local podman registry
    podman_image:
      name: "{{ item }}"
    with_items: "{{ dci_images_to_side_load }}"
    retries: 3
    delay: 10

  - name: Tar all podman images
    command: "podman save -o {{ imagedir.path }}/{{ item | regex_replace(':', '_') | basename }}.tar {{ item }}"
    with_items: "{{ dci_images_to_side_load }}"

  - name: Tar all images into a big tarball
    archive:
      path: "{{ imagedir.path }}/*.tar"
      dest: "{{ imagedir.path }}/image-files.tar.gz"

  - name: Get provisioner SSH identity
    delegate_to: "{{ groups['provisioner'][0] }}"
    fetch:
      src: "~{{ ansible_user }}/.ssh/id_rsa"
      dest: "~/.ssh/provisioner_rsa"
      flat: true

  - name: Set the provisioner user fact
    delegate_to: "{{ groups['provisioner'][0] }}"
    set_fact:
      provisioner_user: "{{ ansible_user }}"

  - name: Write SSH config to connect to the cluster nodes directly
    template:
      src: templates/ssh_config.j2
      dest: ~/.ssh/config
      mode: 0600

  - name: Create a directory to hold all the images on cluster nodes
    delegate_to: "{{ item }}"
    file:
      path: "/var/tmp/podman-images"
      state: directory
    with_items: "{{ groups['masters'] + groups['workers'] }}"

  - name: Untar the podman images on cluster nodes
    delegate_to: "{{ item }}"
    unarchive:
      src: "{{ imagedir.path }}/image-files.tar.gz"
      dest: "/var/tmp/podman-images"
      copy: true
    with_items: "{{ groups['masters'] + groups['workers'] }}"

  - name: Podman load all images
    delegate_to: "{{ item }}"
    become: true
    command: 'find /var/tmp/podman-images/ -name *.tar -exec podman load -i {} \;'
    with_items: "{{ groups['masters'] + groups['workers'] }}"

  always:
  - name: Remove image tar files from cluster nodes
    delegate_to: "{{ item }}"
    ignore_errors: true
    ignore_unreachable: true
    file:
      path: "/var/tmp/podman-images"
      state: absent
    with_items: "{{ groups['masters'] + groups['workers'] }}"

  - name: Clean up temp dir
    file:
      path: "{{ imagedir.path }}"
      state: absent
