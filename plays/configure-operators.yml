---
- name: "Setup SRIOV operator"
  ansible.builtin.include_tasks: apply-sriov-config.yml
  when:
    - enable_sriov | bool

- name: "Enable Openshift Data Foundation"
  ansible.builtin.include_tasks: setup-odf.yml
  when:
    - enable_odf | bool

- name: "Enable NFS external storage provisioner"
  ansible.builtin.include_tasks: setup-nfs-storage.yml
  when:
    - enable_nfs_storage | bool

- name: "Setup CNV and HCO Operators"
  ansible.builtin.include_tasks: setup-cnv.yml
  when:
    - enable_cnv | bool

- name: "Setup a Minio deployment"
  ansible.builtin.include_tasks: setup-minio.yml
  when:
    - enable_minio | bool

- name: "Setup OCP logging stack"
  ansible.builtin.include_tasks: setup-logs-stack.yml
  when:
    - enable_logs_stack | bool

- name: "Setup the Node Discovery Operator"
  vars:
    nfd_namespace: "openshift-nfd"
    nfd_image: "registry.redhat.io/openshift4/ose-node-feature-discovery:latest"
  ansible.builtin.include_tasks: setup-nfd.yml
  when:
    - enable_nfd | bool

- name: "Setup Advanced Cluster Management"
  ansible.builtin.include_role:
    name: redhatci.ocp.acm_setup
  vars:
    hub_disconnected: "{{ dci_disconnected | default(false) | bool }}"
  when:
    - enable_acm | bool

- name: "Setup MetalLB in L2 mode"
  ansible.builtin.include_role:
    name: redhatci.ocp.metallb_setup
  vars:
    mlb_ipaddr_pool: "{{ metallb_ipaddr_pool_l2 }}"
  when:
    - metallb_ipaddr_pool_l2 | default([]) | length > 0
    - enable_mlb | bool

- name: "Setup a Gitea deployment"
  ansible.builtin.include_tasks: setup-gitea.yml
  when:
    - enable_gitea | default(false) | bool

- name: "Setup RHOAI/RHODS instance"
  ansible.builtin.include_tasks: setup-rhoai.yml
  when:
    - enable_rhoai | bool

- name: "Setup GitOps"
  vars:
    sg_ztp_tag: "{{ dci_gitops_ztp_tag | default('v4.19.0') }}"
    sg_mce_tag: "{{ dci_gitops_mce_tag | default('v2.13') }}"
    sg_local_registry: "{{ dci_local_registry }}"
    sg_pullsecret_file: "{{ dci_pullsecret_file | default('') }}"
  ansible.builtin.include_role:
    name: redhatci.ocp.setup_gitops
  when:
    - enable_gitops | bool

- name: "Setup the Network Observability Operator"
  ansible.builtin.include_tasks: setup-netobserv.yml
  when:
    - enable_netobserv | bool

- name: "Setup NMState instance"
  kubernetes.core.k8s:
    definition:
      apiVersion: nmstate.io/v1
      kind: NMState
      metadata:
        name: nmstate
  when:
    - enable_nmstate | bool

- name: "Validate if the Performance Profile CRD is present"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: performanceprofiles.performance.openshift.io
  register: perf_profile_crd

- name: Apply performance profile after cluster install
  when:
    - performance_definition is defined
    - perf_profile_crd.resources | length > 0
    - version is version('4.16', '<')
      or install_type | default('ipi') == 'acm'
      or not dci_pao_on_install | default(true) | bool
  block:
    - name: Apply the Performance Profile
      ansible.builtin.include_tasks: "{{ item }}"
      loop:
        - apply-pao-profile.yml
        - check-cluster-health.yml

- name: Configure TuneD profile
  ansible.builtin.include_tasks: "{{ item }}"
  loop:
    - apply-tuned-profile.yml
    - check-cluster-health.yml
  when:
    - tuned_definition is defined

- name: Setup NUMA Resource Operator
  ansible.builtin.include_tasks: "{{ item }}"
  loop:
    - setup-nro.yml
    - check-cluster-health.yml
  when:
    - enable_nro | bool
    - ocp_version is version("4.12", ">=")

- name: Check if TALM pods are running
  when:
    - dci_operators is defined
    - talm_operator | length > 0
  vars:
    talm_operator: "{{ dci_operators | selectattr('name', 'equalto', 'topology-aware-lifecycle-manager') | list }}"
  block:
    - name: Fail if not all TALM Pods/containers reach a successful state
      vars:
        talm_namespace: "{{ talm_operator[0].namespace }}"
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ talm_namespace }}"
        label_selectors:
          - "app.kubernetes.io/component=talm"
      register: talm_pods
      retries: 30
      delay: 20
      until:
        - talm_pods.resources is defined
        - talm_pods.resources | length > 0
        - talm_pods.resources | selectattr('status.containerStatuses', 'defined') |
          map(attribute='status.containerStatuses') |
          map('map', attribute='ready') | flatten |
          select('equalto', false) | list | length == 0
...
