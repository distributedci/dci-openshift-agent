---
- name: "Teardown for storage service tester"
  ansible.builtin.include_role:
    name: redhatci.ocp.storage_tester
    tasks_from: teardown.yml
    apply:
      environment:
        REGISTRY: >
          {% if dci_disconnected | default(false) %}
          {{ local_registry_host | default('') }}:{{ local_registry_port | default('') }}
          {% else %}
          registry.redhat.io
          {% endif %}
        OC_PATH: "{{ oc_tool_path }}"
  when:
    - dci_main is defined
    - dci_main == 'upgrade'
    - storage_upgrade_tester | default(false) | bool

- name: "Cleanup minio resources"
  vars:
    sm_action: 'cleanup'
  ansible.builtin.include_role:
    name: redhatci.ocp.setup_minio
  when:
    - enable_minio | bool

- name: "Cleanup ClusterLogging resources"
  vars:
    ol_action: 'cleanup'
  ansible.builtin.include_role:
    name: redhatci.ocp.ocp_logging
  when:
    - enable_logs_stack | bool

- name: "Cleanup NetObserv resources"
  vars:
    setup_netobserv_stack_action: 'cleanup'
  ansible.builtin.include_role:
    name: redhatci.ocp.setup_netobserv_stack
  when:
    - enable_netobserv | bool

- name: "Teardown ACM-SNO cluster"
  ansible.builtin.include_role:
    name: redhatci.ocp.acm_sno
    tasks_from: cleanup.yml
    apply:
      environment:
        - KUBECONFIG: "{{ hostvars.localhost.hub_kubeconfig_path }}"
  when:
    - (install_type | default('ipi')) == 'acm'
    - acm_cluster_type == 'sno'

- name: Remove the ZTP managed cluster from ArgoCD
  vars:
    asm_action: "delete-ztp-by-ref"
    asm_source_repo: "{{ dci_gitops_sites_repo.url }}"
    asm_target_revision: "{{ dci_gitops_sites_repo.branch }}"
  ansible.builtin.include_role:
    name: redhatci.ocp.acm_spoke_mgmt
    apply:
      environment:
        - KUBECONFIG: "{{ hostvars.localhost.hub_kubeconfig_path }}"
  when:
    - dci_gitops_sites_repo.url | default('') | length
    - dci_gitops_sites_repo.branch | default('') | length
    - acm_cluster_type == 'ztp-spoke'
...
