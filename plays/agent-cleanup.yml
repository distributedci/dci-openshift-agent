---
- name: Eject Media
  vars:
    discovery_iso_name: "discovery/{{ cluster_name }}/discovery-image.iso"
    discovery_iso_server: "http://{{ hostvars['http_store']['ansible_host'] }}"
    boot_iso_url: "{{ discovery_iso_server }}:{{ http_store_port.stdout |
                  default(hostvars['http_store']['http_port']) }}/{{ discovery_iso_name }}"
  ansible.builtin.include_role:
    name: "redhatci.ocp.vendors.{{ hostvars[target_host]['vendor'] | lower }}"
    tasks_from: eject.yml
  loop: "{{ groups['nodes'] | default([]) }}"
  loop_control:
    loop_var: target_host
  when:
    - "'vendor' in hostvars[target_host]"
    - (install_type | default('ipi')) == 'abi'

- name: "Remove pull secret file"
  ansible.builtin.file:
    path: "{{ dci_pullsecret_file }}"
    state: absent
  when:
    - dci_pullsecret_file is defined

- name: "Remove docker auths directory"
  ansible.builtin.file:
    path: "{{ docker_conf.path }}"
    state: absent
  when: docker_conf is defined

- name: "Remove ICSP conversion directory"
  ansible.builtin.file:
    path: "{{ icsp_tmp_dir.path }}"
    state: absent
  when:
    - icsp_tmp_dir is defined

- name: "Remove bundle build directory"
  ansible.builtin.file:
    path: "{{ bundle_tmp_dir.path }}"
    state: absent
  when:
    - bundle_tmp_dir is defined

- name: "Remove core_user manifests directory"
  ansible.builtin.file:
    path: "{{ core_pass_manifests }}"
    state: absent
  when:
    - core_pass_manifests is defined

- name: "Delete UPI tmp file"
  ansible.builtin.file:
    path: "{{ upi_creds_file.path }}"
    state: absent
  when:
    - upi_creds_file is defined

- name: "Remove artifact webserver for IPI installs"
  when:
    - dci_main == 'install'
    - (install_type | default('ipi')) == 'ipi'
  block:
    - name: "Remove artifact webserver"
      containers.podman.podman_container:
        name: "{{ job_id }}"
        state: absent

    - name: "Disallow HTTP traffic"
      ansible.posix.firewalld:
        port: "{{ aw_dynamic_port }}/tcp"
        permanent: false
        immediate: true
        state: disabled
        zone: "{{ aw_zone }}"
      become: true
      when:
        - aw_dynamic_port is defined
        - aw_zone is defined

- name: "Delete logs directory"
  ansible.builtin.file:
    path: "{{ job_logs.path }}"
    state: absent
  when:
    - job_logs is defined
...
