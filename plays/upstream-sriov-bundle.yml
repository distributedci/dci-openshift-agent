---
- name: Create temporary build directory
  tempfile:
    state: directory
    prefix: bundle_dir.
  register: bundle_tmp_dir

- name: "Set working directory"
  set_fact:
    bundle_tmp_dir: "{{ bundle_tmp_dir.path }}"

- name: "Clone/update SRIOV network-operator repo"
  vars:
    git_repo: "https://github.com/openshift/sriov-network-operator.git"
    git_ref: "release-{{ base_version }}"
  git:
    version: "{{ git_ref }}"
    repo: "{{ git_repo }}"
    dest: "{{ bundle_tmp_dir }}/sriov-network-operator"
    force: true
  register: sriov_clone
  retries: 3
  delay: 10
  until: not sriov_clone.failed

- name: "Pin CSV"
  script:
    cmd: >
      plays/scripts/use-digest
      {{ bundle_tmp_dir }}/sriov-network-operator/manifests/stable/sriov-network-operator.clusterserviceversion.yaml

- name: "Build SRIOV bundle image"
  shell: >
    podman build .
    -f bundleci.Dockerfile
    -t {{ sriov_bundle }}:{{ base_version }}
  args:
    chdir: "{{ bundle_tmp_dir }}/sriov-network-operator"

- name: "Push the new bundle image to registry"
  shell:
    cmd: >
      podman push
      --authfile {{ dci_pullsecret_file }}
      {{ sriov_bundle }}:{{ base_version }}

- name: "Get bundle image SHA256"
  shell:
    cmd: >
      skopeo inspect
      --authfile {{ dci_pullsecret_file }}
      docker://{{ sriov_bundle }}:{{ base_version }} |
      jq -r '.Digest'
  register: bundle_sha
  retries: 5
  delay: 5
  until:
    - bundle_sha.stdout | regex_search('^sha')

- name: "Delete temp directory"
  file:
    state: absent
    path: "{{ bundle_tmp_dir }}"

- name: Add the sriov bundle to the list of upstream bundles
  set_fact:
    upstream_bundles: "{{ upstream_bundles | default([]) + [sriov_bundle + '@' + bundle_sha.stdout] }}"

- name: Remove local bundle image
  shell:
    cmd: >
      podman rmi -f
      {{ sriov_bundle }}:{{ base_version }}

- name: Set upstream sriov variable
  set_fact:
    upstream_sriov: true
