---

# Files that are retrieved from provisioner in IPI and UPI deployments can be obtained from
# repo_root_path in Assisted jobs, since there is no provisionhost in that deployment mode
# install-config file is already retrieved from dci_cluster_configs_dir, not needing to retrieve
# it here
- name: "Get config files from Assisted deployment"
  block:
    - name: Assisted - Copy openshift_install.log file in log folder
      copy:
        src: "{{ repo_root_path }}/generated/{{ cluster_name }}/.openshift_install.log"
        dest: "{{ job_logs.path }}/openshift_install.log"

    - name: Assisted - Copy openshift_install_state.json file in log folder
      copy:
        src: "{{ repo_root_path }}/generated/{{ cluster_name }}/.openshift_install_state.json"
        dest: "{{ job_logs.path }}/openshift_install_state.json"

    - name: Assisted - Copy agent-config.yaml file in log folder
      copy:
        src: "{{ repo_root_path }}/agent-config.yaml"
        dest: "{{ job_logs.path }}/agent-config.yaml"

    - name: Assisted - Copy install-config.yaml file in log folder
      copy:
        src: "{{ repo_root_path }}/install-config.yaml"
        dest: "{{ job_logs.path }}/install-config.yaml"

# For the rest of log files, run get-ai-logs script
# Rendezvouz node is the first master node of the cluster
- name: "Get logs from Assisted deployment"
  environment:
    OPENSHIFT_INSTALL_BINARY: "{{ agent_based_installer_path }}"
  vars:
    agent_based_installer_bootstrap_node: "{{ groups['masters'][0] }}"
    rendezvous_ip_address: "{{ hostvars[agent_based_installer_bootstrap_node][host_ip_keyword] }}"
    domain_name: "{{ cluster_name }}.{{ base_dns_domain }}"
  script:
    cmd: >
      ./scripts/get-ai-logs
      {{ rendezvous_ip_address }}
      {{ domain_name }}
      {{ job_logs.path }}
      {{ groups['nodes'] | join (' ') }}

# They are only created if the Assisted deployment fails after bootstrap
# (and not always)
- name: Submission of Assisted logs - if present
  block:
    - name: Find log-bundle compressed file generated by Assisted
      find:
        paths: "{{ repo_root_path }}"
        recurse: yes
        patterns: "log-bundle-*"
      register: assisted_logs_matched

    - name: "Upload Assisted logs"
      vars:
        mime_type: "application/x-gzip"
      include_tasks: upload-log.yml
      with_items: "{{ assisted_logs_matched.files }}"
