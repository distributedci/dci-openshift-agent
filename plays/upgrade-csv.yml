- name: "Upgrading Operator {{ subs.subcriptionName }}"
  debug:
    msg: "{{ subs.subcriptionName }}"

# Need to delete the non approved install plan, once the subscriptions InstallPlan is set to Automatic
# the install plans will be automatically approved in order to get the latest CSV version according to what
# is defined in the upgrade graphs.
- name: "Get Install plans"
  community.kubernetes.k8s_info:
    api: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: "{{ subs.namespace }}"
  register: install_plans
  retries: 5
  delay: 5

- name: "Filter install plans details"
  vars:
    ip_details: "resources[*].{ ipName: metadata.name, approved: spec.approved}"
  set_fact:
    ips: "{{ install_plans | json_query(ip_details) }}"
  retries: 5
  delay: 5

- name: "Change Subscription to Automatic"
  community.kubernetes.k8s:
    state: patched
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ subs.subcriptionName }}"
        namespace:  "{{ subs.namespace }}"
      spec:
        name: "{{ subs.operatorName }}"
        installPlanApproval: "Automatic"

- name: "Delete non-approved install plans"
  community.kubernetes.k8s:
    api: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: "{{ subs.namespace }}"
    name: "{{ ip.ipName }}"
    state: absent
  retries: 5
  delay: 5
  loop: "{{ ips }}"
  loop_control:
    loop_var: ip
    label: "{{ ip.ipName }}"
  when: not ip.approved | bool

- name: "Get updated package manifest"
  community.kubernetes.k8s_info:
    api: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: "{{ subs.operatorName }}"
    namespace:  default
  register: packagemanifest
  retries: 10
  delay: 5
  until:
    - packagemanifest.resources | length == 1

- name: "Get operator's new default channel name"
  vars:
    channels: "resources[*].status.defaultChannel"
  set_fact:
    default_channel: "{{ packagemanifest | json_query(channels) | join('') | string }}"

- name: "Get operator's CSV for desired channel"
  vars:
    current_csv: "resources[*].status.channels[? name=='{{ default_channel }}' ].currentCSV | [0]"
  set_fact:
    operator_csv: "{{ packagemanifest | json_query(current_csv) | first  }}"

- name: "Upgrade details"
  debug:
    msg: "Upgrading from {{ subs.installedCSV }} to {{ operator_csv }}"

- name: "Wait up to 1 hour for new operator's CSV to be ready"
  community.kubernetes.k8s_info:
    api: operators.coreos.com/v1alpha1
    namespace: "{{ subs.namespace }}"
    kind: ClusterServiceVersion
    name: "{{ operator_csv }}"
  register: csv
  retries: 120
  delay: 30
  until:
    - csv.resources | length == 1
    - "'status' in csv.resources[0]"
    - "'phase' in csv.resources[0].status"
    - csv.resources[0].status.phase == 'Succeeded' or csv.resources[0].status.phase == 'Present'
  ignore_errors: yes
...
