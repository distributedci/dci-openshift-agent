#
# APACHE
#

- name: Ensure Apache is installed
  package:
    name: 'httpd'
    state: 'present'
  become: true
- name: Ensure Apache is running
  systemd:
    name: 'httpd'
    state: 'started'
  become: true
- name: Ensure python-firewall is installed
  package:
    name: 'python-firewall'
    state: 'present'
  become: true
- name: Open port 80 on the firewall
  firewalld:
    zone: public
    service: http
    permanent: true
    state: enabled
  register: result
  failed_when: false
  become: true
- name: Drop existing repo dir
  file:
    path: '{{ dci_mirror_location }}/dci_repo'
    state: absent
  become: true
- name: Ensure proper directories are created
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ ansible_user_id }}'
    group: '{{ ansible_user_gid }}'
  with_items:
    - '{{ dci_cache_dir }}'
    - '{{ dci_mirror_location }}/dci_repo'
  become: true

#
# REGISTRY
#

- name: install the registry dependency
  package:
    name: '{{ item }}'
    state: present
  with_items:
  - docker
  - python-docker-py
  - docker-distribution
  become: True
- name: Prepare docker configuration
  copy:
    content: |
      {"insecure-registries":["{{ dci_base_ip|default(ansible_default_ipv4.address) }}:{{ dci_registry_port|default(5000) }}"] }
    dest: /etc/docker/daemon.json
  become: True
- name: Enable overlay2 storage backend
  lineinfile:
     dest: /etc/sysconfig/docker-storage-setup
     line: "STORAGE_DRIVER=overlay2"
     regexp: '^STORAGE_DRIVER='
  become: True
- name: Ensure docker is restarted
  service:
    name: docker
    state: restarted
  become: True
- name: Prepare docker-distribution configuration
  template:
    src: docker_distribution.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
  become: True
- name: Ensure docker-distribution is restarted
  service:
    name: docker-distribution
    state: restarted
  become: True
- name: Open docker registry port on the firewall
  firewalld:
    zone: public
    port: '{{ dci_registry_port|default(5000) }}/tcp'
    permanent: true
    state: enabled
  register: result
  failed_when: false
  become: true

- name: Skip container images from list
  lineinfile:
    path: '{{ dci_mirror_location }}/dci_repo/{{ components[0].canonical_project_name }}/images_list.yaml'
    regexp: '.*-{{ item }}.*'
    state: absent
  with_items: '{{Â skip_container_images|default([]) }}'

- name: Download the Openstack container images
  shell: |
    python /usr/share/dci-ansible-agent/fetch_images.py \
      {{ dci_mirror_location | quote }}/dci_repo/{{ components[0].canonical_project_name }}/images_list.yaml
  register: image_sync_result
  until: image_sync_result.rc == 0
  retries: 3
  delay: 60
  become: True
  become_flags: '-E'
  environment:
    DCI_REGISTRY_PASSWORD: '{{ hostvars.localhost.job_informations.job.topic.data.registry.password | quote}}'
    DCI_REGISTRY_USER: '{{ hostvars.localhost.job_informations.job.topic.data.registry.login | quote}}'
