{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "de87c5d7_945a26bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-17T16:41:24Z",
      "side": 1,
      "message": "Some more tests (remember we have already validated that automatic dci-check-change job launched by CI service includes correctly the DCI tag related to the server in which the job is executed and the resource is selected randomly from the pool):\n\n1. Testing an app-agent change (25823 patchset 1)\n\n```\n[dci-openshift-agent@server01 25823]$ pwd\n/var/lib/dci-openshift-agent/ramon/25823\n[dci-openshift-agent@server01 25823]$ /bin/bash /var/lib/dci-openshift-agent/ramon/25823/dci-check-change 25835 /var/lib/dci-openshift-agent/clusterconfigs-server06/kubeconfig\n```\n\nResult: https://www.distributed-ci.io/jobs/e5d97e12-4a52-4268-8858-234f6e498f76/jobStates\n\n- I was able to launch the app-agent in an already running cluster\n- Tag was correctly set to the reserved cluster\n\n2. Same example, but using hints to launch tnf_test_example (25823 patchset 2)\n\n```\n[dci-openshift-agent@server01 25823]$ pwd\n/var/lib/dci-openshift-agent/ramon/25823\n[dci-openshift-agent@server01 25823]$ /bin/bash /var/lib/dci-openshift-agent/ramon/25823/dci-check-change 25835 /var/lib/dci-openshift-agent/clusterconfigs-server06/kubeconfig\n```\n\nResult: https://www.distributed-ci.io/jobs/718df296-e9a7-482b-b167-ec88a989b96c/jobStates\n\n- I was able to launch the app-agent in an already running cluster\n- Tag was correctly set to the reserved cluster\n- Hint was launched correctly (tnf_test_example was launched)\n\n(in these two examples, if you check the change being tested, you\u0027ll see dci-check-change has voted on it: https://softwarefactory-project.io/r/c/dci-openshift-app-agent/+/25835)\n\n3. Testing a dci-openshift-agent change (this one) in a reserved cluster (server06)\n\n```\n[dci-openshift-agent@server01 25823]$ pwd\n/var/lib/dci-openshift-agent/ramon/25823\n[dci-openshift-agent@server01 25823]$ env DCI_QUEUE_RESOURCE\u003dserver06 /bin/bash /var/lib/dci-openshift-agent/ramon/25823/dci-check-change 25823\n```\n\nResult: https://www.distributed-ci.io/jobs/2fd1820e-2b59-4bed-897e-1d759773845d/jobStates\n\n- Job was launched in the reserved cluster, removing the current OCP installation\n- Tag was correctly set to the reserved cluster\n\n(and also, dci-check-change will vote this change based on the result of that scheduled job)\n\nSo, from my side, everything is working fine and this change would be ready for merging.",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac4ae68b_b091e98f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-17T17:43:59Z",
      "side": 1,
      "message": "Thanks for the update and the info Ramón. I have more feedback related in the code.\n\nI really would love to have someone else\u0027s eyes on this change and chime in.\n\nAdditionally, I\u0027ve been thinking on this change. Seems to me like the end goal is to have a way to identify *where* a job was executed regardless of *how* it was executed (dci-pipeline, schedule, check, dci-check-change, etc)\n\nIf the statement above is true, then seems to me like an easier way to approach this is by adding a tag in the d-o-a (and later in d-o-a-a) thus avoiding this injection of tags from the outside. With that being said, I\u0027ve created a PoC in change: 25836\n\nIn this job: https://www.distributed-ci.io/jobs/6fdce9d4-0ff8-4473-8982-2497451d6d55/jobStates you can see the tag was added and that was called via dci-check-change:\n\n$ sudo journalctl -u ci | grep \u0027dci-check-change 25836\u0027                                                \nAug 17 13:14:45 server01.partnerci.bos2.lab ci.sh[4030702]: + exec /var/lib/dci-openshift-agent/gerrit/25836-bada18da41218272567c8e2f46bc4d2f.bootstrap/dci-openshift-agent/dci-check-change 25836\n\nwdyt?\n",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b81810c5_1c1f42f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 724
      },
      "writtenOn": "2022-08-17T18:50:33Z",
      "side": 1,
      "message": "I see this change is not only to identify the server that was used for a job but also to be able to reserve it and continue running jobs on top of it. Now that I have started using Bos2 more for dev/test I have had both needs (Thanks for this).\n\nI do not think that the part of running jobs on a specific cluster can be done in the agent. Maybe keep the part of the tag in the agent and the code related to the resource in the dci-check-change?",
      "parentUuid": "ac4ae68b_b091e98f",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e78229d7_f7a52097",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 606
      },
      "writtenOn": "2022-08-17T19:23:49Z",
      "side": 1,
      "message": "I\u0027m trying to parse all of this but I\u0027m a little lost.  Can\u0027t you execute a job on a specific resource with the queue?  If not, wouldn\u0027t it make sense to enhance the queue command to support that?  Manual steps would be to create a new pool (could be called the same name as the resource) and move the resource from the pool it was in to the new pool.\n\nOr are you trying to do something different?",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ee19348_2a1b9fd8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-17T22:17:58Z",
      "side": 1,
      "message": "Thanks Beto, yeah I see how that functionality is also quite useful, mostly nowadays when we don\u0027t have the other Lab.\n\nBut, I found that with this other POC (25843) it\u0027s possible to have that behavior, that is, if an env var SKIP_DCI_QUEUE (for now) is used on dci-check-change then it will avoid the use of dci-queue and execute test-runner directly, without the juggling of passing vars down to the other scripts.\n\nAt the end I see there are two purposes this change is serving.\n\n1. Injecting a tag of the name of the cluster. This POC solves that: 25836\n2. Not enqueuing a job using dci-check-change. This other POC solves that: 25843\n\nThoughts?",
      "parentUuid": "b81810c5_1c1f42f3",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14a71a1d_de6fa1ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-17T22:17:58Z",
      "side": 1,
      "message": "Agreed, I found some of this conditionals quite tricky and I\u0027d like to avoid the increase of complexity, hence my previous comments.\n\nI have a couple of POC that IMO cover what this change is solving, I\u0027ll let Ramón take a look to them and see if those satisfy the need on this change.",
      "parentUuid": "e78229d7_f7a52097",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4a3a32f_8e843bfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-18T10:52:35Z",
      "side": 1,
      "message": "Maybe we can do the same in these two CRs, yes, so I\u0027ll abandon this to focus on these two CRs, thanks Tony.",
      "parentUuid": "0ee19348_2a1b9fd8",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f501153d_41a8bfc6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-18T10:52:35Z",
      "side": 1,
      "message": "As Tony has c",
      "revId": "e2231180c357462da6b18d3aa28af8ad51910896",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    }
  ]
}