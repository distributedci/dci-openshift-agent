{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "da171d35_08602b18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-03-30T06:49:07Z",
      "side": 1,
      "message": "I\u0027m not getting the point at all for this change. Why do we want to always execute the uncordon workaround, instead of only when the MCP status is not the correct?",
      "revId": "338405286903ce19cfdca87ea3d7270b9c3dbd05",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffed8cd1_12c6270f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 938
      },
      "writtenOn": "2022-03-30T10:59:33Z",
      "side": 1,
      "message": "Hi Ramon, that\u0027s to deal with the situations when MCP status is good but one of the nodes is in SchedulingDisabled state anyway. \n\nHere is an example: https://www.distributed-ci.io/jobs/3edf935e-a31c-4dfd-ba8e-362d66f676d1/jobStates#02f68780-5370-4631-bed7-356e6cdf6788:file33 \n\nYou could find more details in ticket 475.",
      "parentUuid": "da171d35_08602b18",
      "revId": "338405286903ce19cfdca87ea3d7270b9c3dbd05",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89ec9e3f_59562da3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-03-30T13:29:24Z",
      "side": 1,
      "message": "I\u0027ll provide more context in CILAB-475, because I think this may be handled in a different way. Let\u0027s keep posted there",
      "parentUuid": "ffed8cd1_12c6270f",
      "revId": "338405286903ce19cfdca87ea3d7270b9c3dbd05",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2da5128c_397277df",
        "filename": "common-roles/wait-mcp/tasks/main.yml",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 908
      },
      "writtenOn": "2022-03-30T03:57:05Z",
      "side": 1,
      "message": "I tested this and the variable reg_mcpool_status[\u0027failed\u0027] is always defined, if all nodes are ready is false, and if a node is not ready is true. Maybe we want to add the following? \n reg_mcpool_status[\u0027failed\u0027] | bool",
      "revId": "338405286903ce19cfdca87ea3d7270b9c3dbd05",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f306bfe_9c3e4f57",
        "filename": "common-roles/wait-mcp/tasks/main.yml",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 938
      },
      "writtenOn": "2022-03-30T08:31:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2da5128c_397277df",
      "revId": "338405286903ce19cfdca87ea3d7270b9c3dbd05",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3a47434_3f8332f6",
        "filename": "common-roles/wait-mcp/tasks/main.yml",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 938
      },
      "writtenOn": "2022-03-30T10:59:33Z",
      "side": 1,
      "message": "Thank you for testing Manuel, the issue is now fixed.",
      "parentUuid": "7f306bfe_9c3e4f57",
      "revId": "338405286903ce19cfdca87ea3d7270b9c3dbd05",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    }
  ]
}