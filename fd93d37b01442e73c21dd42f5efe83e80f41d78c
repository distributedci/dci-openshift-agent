{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cea5fe36_99ed75df",
        "filename": "dci-check-change",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-16T22:39:40Z",
      "side": 1,
      "message": "If the code reaches this point then DCI_QUEUE must be set and dci-queue is installed.\n\nI think it\u0027s OK to consider DCI_QUEUE_RESOURCE. But, I think it should not be nested in here. If included, I think it should be at the level of DCI_QUEUE.",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfa2d98d_ccea7877",
        "filename": "dci-check-change",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-17T12:30:58Z",
      "side": 1,
      "message": "It is supposed that the config related to dci-queue is applied up to this point, that\u0027s why we have the first if clause: `if [ -z \"$NO_DCI_QUEUE\" ] \u0026\u0026 [ -n \"$DCI_QUEUE\" ] \u0026\u0026 type -p dci-queue \u003e\u0026 /dev/null`\n\nI\u0027ve included some more documentation and I\u0027ve declared DCI_QUEUE_RESOURCE in the same way we are doing with `check` command, also defining DCI_QUEUE with -p argument. Is it better now?",
      "parentUuid": "cea5fe36_99ed75df",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b0d7d7b_637d8d3e",
        "filename": "dci-check-change",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-17T17:43:59Z",
      "side": 1,
      "message": "\u003e It is supposed that the config related to dci-queue is applied up to this point\n\nCorrect, that means that it is expected to use dci-queue, that\u0027s why I mentioned that the DCI_QUEUE_RESOURCE validation should be at that level and not nested.\n\n\u003e also defining DCI_QUEUE with -p argument\n\nI think this adds more complexity ðŸ˜•. For example, when using SUPPORTED_HINTS and ASSISTED_DCI_QUEUE and calling --assisted and -p, will result in overriding -p being ignored. See lines: 91, 130 and 228",
      "parentUuid": "dfa2d98d_ccea7877",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aa05245_af01d782",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-16T22:39:40Z",
      "side": 1,
      "message": "How is RES passed to test-runner?",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98bd771_9d06a03b",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-17T12:30:58Z",
      "side": 1,
      "message": "It is provided here: https://github.com/redhat-cip/dci-openshift-agent/blob/master/dci-check-change#L238, if USE_PREFIX is not set. So, that if-else block, is translated in the following way here:\n\nUSE_PREFIX is not set -\u003e RES is defined and PREFIX is not defined (which is related to this if clause)\nUSE_PREFIX is set -\u003e PREFIX is defined (passed as -p @RESOURCE) and RES is not defined (which is related to the elif clause that is below)",
      "parentUuid": "2aa05245_af01d782",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e25ff84e_f4ef3e11",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-17T17:43:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c98bd771_9d06a03b",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d6b28c4_e2aaf8a3",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-16T22:39:40Z",
      "side": 1,
      "message": "This comparison is a bit strange, why not using -n \"${PREFIX}\" ?",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64ee0264_eddc3be4",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-17T12:30:58Z",
      "side": 1,
      "message": "Because, if PREFIX variable is defined, its content is something like \"-p serverXX\", and we need to remove the \"-p \" to extract the cluster name. So, we need to check if, by removing the \"-p \", we have a resource name present on PREFIX variable, just in case PREFIX \u003d \"-p \"",
      "parentUuid": "3d6b28c4_e2aaf8a3",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78d4459d_26ee626a",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-17T17:43:59Z",
      "side": 1,
      "message": "\u003e if PREFIX variable is defined, its content is something like ...\n\nExactly ðŸ˜Š. *if it\u0027s defined*, so you don\u0027t have to compare it that way, see line 383 or 394. If PREFIX has content ( -n \"${PREFIX}\" ) then you enter the conditional.\n\nOnce inside the conditional you will obtain the value the way you have it.",
      "parentUuid": "64ee0264_eddc3be4",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac48bc77_7f5d9667",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 606
      },
      "writtenOn": "2022-08-17T19:23:49Z",
      "side": 1,
      "message": "Agree with Tony here.  You don\u0027t need to complicate the -n condition.",
      "parentUuid": "78d4459d_26ee626a",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "344ab94e_542f953d",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 667
      },
      "writtenOn": "2022-08-16T22:39:40Z",
      "side": 1,
      "message": "If we don\u0027t know the resource maybe don\u0027t add the tag at all?",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce2cad8b_843c13b9",
        "filename": "test-runner",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 800
      },
      "writtenOn": "2022-08-17T12:30:58Z",
      "side": 1,
      "message": "I\u0027ve changed this, thanks!",
      "parentUuid": "344ab94e_542f953d",
      "revId": "fd93d37b01442e73c21dd42f5efe83e80f41d78c",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    }
  ]
}