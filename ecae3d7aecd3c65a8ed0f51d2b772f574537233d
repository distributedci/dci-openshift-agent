{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7f54b1e9_aba74034",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 800
      },
      "writtenOn": "2023-06-12T08:26:53Z",
      "side": 1,
      "message": "However, we\u0027re still exposing here the creds and will be visible once the change is merged. Is there something we can do here to avoid that? Because I suppose it\u0027s hard to do that by using hints",
      "range": {
        "startLine": 11,
        "startChar": 179,
        "endLine": 11,
        "endChar": 288
      },
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be512f61_9453f3ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "Hi Beto, I\u0027d add loki-related settings in one nested structure, for the sake of simplicity. For example, in the way it\u0027s done now, it\u0027s not evident if enable_ocs is a global setting or loki-specific.\n\nloki_settings:\n  storage_cluster: True\n  enable_ocs: True\n  enable_lso: True\n  enable_odf: True\n  enable_logs_stack: True\n  dci_teardown_on_success: False\n  logs_access_key_id: \"8PV0sJkcu6aqBsw6W5Oc\"\n  logs_access_key_secret: \"vooASng2yM6MGaSKRs3HblIiTW43ZNdpXkjEs48C\"\n  logs_bucket: \"loki\"\n  logs_endpoint: \"http://192.168.16.10:9000\"\n  logs_region: \"us-east-1\"\n  logs_loki_size: \"1x.extra-small\"\n  logs_storage_class: \"ocs-storagecluster-ceph-rbd\"\n  \nThis way it\u0027s clear what to enable / disable during the activation. I would also added this into docs in a separate table of loki-related settings.",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e20bda2d_0ed830e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "added the option to load the vars from a file, and those can be encrypted. We should be good. Thanks keep your finger on it. A was not doing this because a I was not been able to read encrypted values from the inventory files.",
      "parentUuid": "7f54b1e9_aba74034",
      "range": {
        "startLine": 11,
        "startChar": 179,
        "endLine": 11,
        "endChar": 288
      },
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f77ca3_a865113b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "will prefer not to use a nested structure. Added the option to use a vars file. Will be easier for testing on bos2 and allow encrypting the passwords.\n\nFor Dallas, the settings will be defined at the inventory.\n\nThe enable OCS, odf, and also vars are for the storage class installation, we need to work on simplifying that configuration.",
      "parentUuid": "be512f61_9453f3ff",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91f23c6a_51960b39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 908
      },
      "writtenOn": "2023-06-09T16:21:47Z",
      "side": 1,
      "message": "Nice work! LGTM just two minor comments in case you want to polish, or that can be done in v2 if really needed.",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7db88334_25ddefdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-09T18:49:00Z",
      "side": 1,
      "message": "Thanks Manuel!",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e3be4e7_2a5ec876",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 800
      },
      "writtenOn": "2023-06-12T08:26:53Z",
      "side": 1,
      "message": "LGTM, just one more concern",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c60c539_cd8829e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "Hey Beto, impressive work! I just added some ideas to simplify the code to make it easier to follow and debug. \n\nMy main concern is the usage of `collection type: \"vector\"`, I\u0027d propose that we use fluentd right from the start, it would simplify a lot the follow-up automated log analysis and setup of alerts with Prometheus if needed.\n\nHere is how fluentd allows us to set up the alerts with Prometheus, it could be really interesting for us: https://docs.fluentd.org/monitoring-fluentd/monitoring-prometheus.",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7f219b2_bf9884e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "It is deprecated, as a second stage for this we need to check how be able to use the logs from clusters that are already gone. \n\nWe can discuss about that on Friday.",
      "parentUuid": "0c60c539_cd8829e5",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d9bf573_5d4b88fd",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 266,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "I would move this out to a separate table loki-setting, not to make it too heavy",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29234e91_0dcfe6f2",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 266,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d9bf573_5d4b88fd",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9239642c_f9662941",
        "filename": "plays/deploy-operators.yml",
        "patchSetId": 15
      },
      "lineNbr": 297,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "probably the usage of if/else {% if dci_disconnected %}{{ image_1 }}{% else %}{{ image_2 }}{% endif %} could improve the readability here",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2818d6b_13840b47",
        "filename": "plays/deploy-operators.yml",
        "patchSetId": 15
      },
      "lineNbr": 297,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9239642c_f9662941",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51571b1b_3dc694a3",
        "filename": "plays/pre-run.yml",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "could we provide credentials as a link to the file and not as a plain text?",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62b19f95_f7a0e244",
        "filename": "plays/pre-run.yml",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "added the option to pass the variables in a file, that way we will be able to use vault encryption",
      "parentUuid": "51571b1b_3dc694a3",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67630441_79e59157",
        "filename": "roles/ocp-logging/defaults/main.yml",
        "patchSetId": 15
      },
      "lineNbr": 3,
      "author": {
        "id": 908
      },
      "writtenOn": "2023-06-09T16:21:47Z",
      "side": 1,
      "message": "wdyt of moving variable $eventrouter_rhel_tag from group_vars/all to this file and actually use it in the ol_event_router_image var?",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a5b4879_acf206d4",
        "filename": "roles/ocp-logging/defaults/main.yml",
        "patchSetId": 15
      },
      "lineNbr": 3,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-09T18:49:00Z",
      "side": 1,
      "message": "The idea of having the tag in group_vars/all is to have a single place to update all the \"static\" images that we use in the agent. So I am thinking of doing something similar not just for this image. May be the full image name or just the tag. \n\nAnd for the role have its config setting. We may want to desire to use a different version in DOA than the one that is defaulted in the role.\n\nWill handle the default images for DOA in a separate change.",
      "parentUuid": "67630441_79e59157",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "875cd949_ad6ed49b",
        "filename": "roles/ocp-logging/tasks/pre-run.yml",
        "patchSetId": 15
      },
      "lineNbr": 30,
      "author": {
        "id": 908
      },
      "writtenOn": "2023-06-09T16:21:47Z",
      "side": 1,
      "message": "In the README of this role it shows that we could install the operator in OCP 4.10  and above, here will only allow starting at 4.11 isn\u0027t it?",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51f1f329_62d9a8af",
        "filename": "roles/ocp-logging/tasks/pre-run.yml",
        "patchSetId": 15
      },
      "lineNbr": 30,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-09T18:49:00Z",
      "side": 1,
      "message": "at this time `ol_ocp_supported` is set to 4.10, so it is \"\u003e\u003d\" and will pass. If 4.9 is tested, that will fail.",
      "parentUuid": "875cd949_ad6ed49b",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce2eea2c_e43274b0",
        "filename": "roles/ocp-logging/tasks/setup-logging.yml",
        "patchSetId": 15
      },
      "lineNbr": 15,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "I see that all of the variables are re-defined 3 times though the code:\nlogs_access_key_secret -\u003e ol_access_key_id -\u003e access_key_id\nlogs_region -\u003e ol_region -\u003e region\netc\n\nIt makes the code difficult to follow.\n\nCould we just define every setting once, for example, by setting `region` and then instead of re-assigning all the time, just check if this variable is defined?",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3f21c04_9563d2a9",
        "filename": "roles/ocp-logging/tasks/setup-logging.yml",
        "patchSetId": 15
      },
      "lineNbr": 15,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "All the new roles and the ones that have been refactored are following the same approach.\n\n1. DCI variables\n2. Role variables\n3. attribute\n\nWe have been having many issues with collisions between variables, not being clear about values passed to a role, etc. We are also allowed to use the functions without DCI.",
      "parentUuid": "ce2eea2c_e43274b0",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "315a0dd6_e1739e2d",
        "filename": "roles/ocp-logging/tasks/setup-logging.yml",
        "patchSetId": 15
      },
      "lineNbr": 53,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "I believe that `type: fluentd` can be more beneficial if we would like to analyze our logs one day, especially in an automated way. It also seems to be a recommended setting: https://docs.openshift.com/container-platform/4.13/logging/config/cluster-logging-configuring-cr.html",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91ed361f_b22a3418",
        "filename": "roles/ocp-logging/tasks/setup-logging.yml",
        "patchSetId": 15
      },
      "lineNbr": 53,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "Fluentd collector is deprecated, some parts of the documentation still need to be updated for the new components.",
      "parentUuid": "315a0dd6_e1739e2d",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7626f5ac_63629e49",
        "filename": "roles/ocp-logging/tasks/setup-logging.yml",
        "patchSetId": 15
      },
      "lineNbr": 171,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "could we wait for a particular object to be up instead of simply waiting for 1 min?",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dda1f3bb_5160690e",
        "filename": "roles/ocp-logging/tasks/setup-logging.yml",
        "patchSetId": 15
      },
      "lineNbr": 171,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "Unfortunately no, actually having the pods running should be enough. So removing this. Will add a troubleshooting/verification section to the readme.",
      "parentUuid": "7626f5ac_63629e49",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11951811_4550a78c",
        "filename": "roles/ocp-logging/tasks/validate-stack.yml",
        "patchSetId": 15
      },
      "lineNbr": 7,
      "author": {
        "id": 938
      },
      "writtenOn": "2023-06-12T10:59:43Z",
      "side": 1,
      "message": "do we use openshift-console for the logs only? If not, maybe we could separate the namespaces",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdbae04e_5282bb27",
        "filename": "roles/ocp-logging/tasks/validate-stack.yml",
        "patchSetId": 15
      },
      "lineNbr": 7,
      "author": {
        "id": 724
      },
      "writtenOn": "2023-06-12T22:47:44Z",
      "side": 1,
      "message": "We are checking for the openshift-console pods to be running because after patching the Console CR to enable the Log\u0027s GUI, the pods are restarted. \n\nTo enable monitoring on a namespace we need to add the proper label `openshift.io/cluster-monitoring\u003dtrue`",
      "parentUuid": "11951811_4550a78c",
      "revId": "ecae3d7aecd3c65a8ed0f51d2b772f574537233d",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    }
  ]
}