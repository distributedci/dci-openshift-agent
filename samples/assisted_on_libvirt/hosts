all:
  vars:
    vm_node_prefix: ''

    # Flags to enable/disable prerequisite service setup
    # You will need to ensure alternatives are available for anything that will not be automatically set up
    setup_assisted_installer: true  # always required
    setup_http_store_service: true  # always required to serve boot.iso to nodes
    setup_ntp_service: false  # recommended for libvirt setups
    setup_dns_service: false  # recommended for libvirt setups
    setup_registry_service: false # set to true on restricted network
    use_local_mirror_registry: false # set to true on restricted network

    # Local cache configuration
    cache_dir_base: "/opt/dci/assisted"
    downloads_path: "{{ cache_dir_base }}"
    assisted_installer_dir: "{{ cache_dir_base }}/ai"
    registry_dir: "{{ cache_dir_base }}/registry"
    vm_create_scripts_dir: "{{ cache_dir_base }}/vm_scripts"
    sushy_dir: "{{ cache_dir_base }}/sushy"
    http_dir: "{{ cache_dir_base }}/http"
    iso_download_dest_path: "{{ http_dir }}/data"
    rootfs_directory: "{{ iso_download_dest_path }}/pxe"

    # HTTP Secret for the Container Registry.
    # More information on the vars used to configure the Registry can be found here:
    # https://docs.docker.com/registry/configuration/#http
    VAULT_REGISTRY_HOST_REGISTRY_HTTP_SECRET: SECRET

    # Credentials for the Disconnected Registry (if relevant)
    VAULT_REGISTRY_HOST_DISCONNECTED_REGISTRY_USER: USER
    VAULT_REGISTRY_HOST_DISCONNECTED_REGISTRY_PASSWORD: PASSWORD

    #######################
    # Nodes configuration #
    #######################

    # Default credentials for the BMCs
    VAULT_NODES_BMC_USER: USER
    VAULT_NODES_BMC_PASSWORD: PASSWORD

    ##################################
    # Assisted Install Configuration #
    ##################################
    # These options configure Assisted Installer and the resulting cluster
    # https://generator.swagger.io/?url=https://raw.githubusercontent.com/openshift/assisted-service/58a6abd5c99d4e41d939be89cd0962433849a861/swagger.yaml
    # See section: cluster-create-params

    # Cluster name and dns domain combine to give the cluster namespace that will contain OpenShift endpoints
    # e.g. api.clustername.example.lab, worker1.clustername.example.lab
    cluster_name: "server04-assisted"

    base_dns_domain: "partnerci.bos2.lab"

    # Virtual IP addresses used to access the resulting OpenShift cluster
    api_vip: "192.168.16.48" # the IP address to be used for api.clustername.example.lab and api-int.clustername.example.lab, if installing SNO set to the same IP as the single master node
    ingress_vip: "192.168.16.49" # the IP address to be used for *.apps.clustername.example.lab, if installing SNO set to the same IP as the single master node

    ## Allocate virtual IPs via DHCP server. Equivalent to the vip_dhcp_allocation configuration option of Assisted Installer
    vip_dhcp_allocation: false

    # The subnet on which all nodes are (or will be) accessible.
    machine_network_cidr: "192.168.16.0/25"

    # The IP address pool to use for service IP addresses
    service_network_cidr: 172.30.0.0/16

    # Cluster network settings. You are unlikely to need to change these
    cluster_network_cidr: 10.128.0.0/14 # The subnet, internal to the cluster, on which pods will be assigned IPs
    cluster_network_host_prefix: 23 # The subnet prefix length to assign to each individual node.

    # # Cluster network provider. Cannot be changed after cluster is created.
    # # The default is OpenShift SDN unless otherwise specified.
    # network_type: OVNKubernetes
    # network_type: OpenShiftSDN

    ######################################
    # Prerequisite Service Configuration #
    ######################################

    # NTP Service
    # ntp_server is the address at which the NTP service is (or will be) available
    ntp_server: "192.168.16.13"
    # ntp_server_allow is the range of IPs the NTP service will respond to
    ntp_server_allow: "192.168.16.0/25"  # not required if setup_ntp_service is false

    # HTTP Store Configuration
    # ISO name must include the `discovery` directory if you have a SuperMicro machine
    discovery_iso_name: "discovery/{{ cluster_name }}/discovery-image.iso"

    # discovery_iso_server must be discoverable from all BMCs in order for them to mount the ISO hosted there.
    # It is usually necessary to specify different values for KVM nodes and/or physical BMCs if they are on different subnets.
    discovery_iso_server: "http://{{ hostvars['http_store']['ansible_host'] }}"

    ############################
    # Local File Configuration #
    ############################

    repo_root_path: "{{ dci_cluster_configs_dir }}"

    # Directory in which created/updated artifacts are placed
    fetched_dest: "{{ repo_root_path }}/fetched"

    # Configure possible paths for the pull secret
    # first one found will be used
    # note: paths should be absolute
    pull_secret_lookup_paths:
      - "{{ fetched_dest }}/pull-secret.txt"
      - "{{ repo_root_path }}/pull-secret.txt"

    # Configure possible paths for the ssh public key used for debugging
    # first one found will be used
    # note: paths should be absolute
    ssh_public_key_lookup_paths:
      - "{{ fetched_dest }}/ssh_keys/{{ cluster_name }}.pub"
      - "{{ repo_root_path }}/ssh_public_key.pub"
      - ~/.ssh/id_rsa.pub

    # Set the base directory to store ssh keys
    ssh_key_dest_base_dir: "{{ dci_cluster_configs_dir }}"

    # The retrieved cluster kubeconfig will be placed on the bastion host at the following location
    kubeconfig_dest_dir: "{{ dci_cluster_configs_dir }}"
    kubeconfig_dest_filename: "{{ dci_cluster_configs_dir }}/kubeconfig"
    kubeadmin_dest_filename: "{{ cluster_name }}-kubeadmin.vault.yml"
    # You can comment out the line below if you want the kubeadmin credentials to be stored in plain text
    #kubeadmin_vault_password_file_path: "{{ repo_root_path }}/kubeadmin_vault_password_file"

    ############################
    #    LOGIC: DO NOT TOUCH   #
    # vvvvvvvvvvvvvvvvvvvvvvvv #
    ############################

    # pull secret logic, no need to change. Configure above
    #local_pull_secret_path: "{{ lookup('first_found', pull_secret_lookup_paths) }}"
    #pull_secret: "{{ lookup('file', local_pull_secret_path) }}"

    # cluster var is needed by DCI playbooks and roles.
    cluster: "{{ cluster_name }}"

    # ssh key logic, no need to change. Configure above
    local_ssh_public_key_path: "{{ lookup('first_found', ssh_public_key_lookup_paths) }}"
    ssh_public_key: "{{ lookup('file', local_ssh_public_key_path) }}"

    # provided mirror certificate logic, no need to change.
    local_mirror_certificate_path: "{{ (setup_registry_service == true) | ternary(
        fetched_dest + '/' + (hostvars['registry_host']['cert_file_prefix'] | default('registry')) + '.crt',
        repo_root_path + '/mirror_certificate.txt')
      }}"
    mirror_certificate: "{{ lookup('file', local_mirror_certificate_path) }}"

    openshift_version: "{{ openshift_full_version.split('.')[:2] | join('.') }}"

    is_valid_single_node_openshift_config: "{{ (groups['nodes'] | length == 1) and (groups['masters'] | length == 1) }}"

    ############################
    # ^^^^^^^^^^^^^^^^^^^^^^^^ #
    #    LOGIC: DO NOT TOUCH   #
    ############################


  children:
    bastions: # n.b. Currently only a single bastion is supported
      hosts:
        bastion:
          ansible_host: "server04-assisted.partnerci.bos2.lab" # Must be reachable from the Ansible control node
          ansible_connection: local

    # Configuration and access information for the pre-requisite services
    # TODO: document differences needed for already-deployed and auto-deployed
    services:
      hosts:
        assisted_installer:
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          ansible_connection: local
          host: "server04-assisted.partnerci.bos2.lab"
          port: 8090 # Do not change
          dns: "192.168.16.10"

        registry_host:
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          ansible_connection: local
          registry_port: 5000
          registry_fqdn: "server04-assisted.partnerci.bos2.lab"
          cert_common_name: "{{ registry_fqdn }}"
          cert_country: US
          cert_locality: Westford
          cert_organization: DCI
          cert_organizational_unit: Lab
          cert_state: MA

          # Configure the following secret values in the inventory.vault.yml file
          REGISTRY_HTTP_SECRET: "{{ VAULT_REGISTRY_HOST_REGISTRY_HTTP_SECRET | mandatory }}"
          disconnected_registry_user: "{{ VAULT_REGISTRY_HOST_DISCONNECTED_REGISTRY_USER | mandatory }}"
          disconnected_registry_password: "{{ VAULT_REGISTRY_HOST_DISCONNECTED_REGISTRY_PASSWORD | mandatory }}"

        dns_host:
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          ansible_connection: local

        http_store:
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          ansible_connection: local

        tftp_host:
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          ansible_connection: local
          tftp_directory: /var/lib/tftpboot/

        ntp_host:
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          ansible_connection: local

    vm_hosts:
      hosts:
        vm_host1: # Required for using "KVM" nodes, ignored if not.
          ansible_connection: local
          ansible_host: "server04-assisted.partnerci.bos2.lab"
          qemu_user: root  # we want the VMs to belong to root
          host_ip_keyword: ansible_host # the varname in the KVM node hostvars which contains the *IP* of the VM
          images_dir: /var/lib/libvirt/images
          vm_bridge_name: "br0"
          vm_network_test_ip: "192.168.1.105"
          dns: "10.60.0.190"  # DNS used by the bridge
          # ssl cert configuration
          # sushy_fqdn: ... # use in case of different FQDN for the cert
          cert_vars_host_var_key: registry_host # Look up cert values from another host by name (excluding cert_common_name)
          # or
          # cert_country: US
          # cert_locality: Raleigh
          # cert_organization: Red Hat, Inc.
          # cert_organizational_unit: Lab
          # cert_state: NC

    # Describe the desired cluster members
    nodes:
      vars:
        bmc_user: "{{ VAULT_NODES_BMC_USER | mandatory }}"
        bmc_password: "{{ VAULT_NODES_BMC_PASSWORD | mandatory }}"
        bmc_address: "server04-assisted.partnerci.bos2.lab:8082"
        vm_host: vm_host1
        vendor: KVM
        vm_spec:
          cpu_cores: 8
          ram_mib: 16384
          disk_size_gb: 150
      children:
        masters:
          vars:
            role: master
          hosts:
            dciokd-master-0:
              ansible_host: "192.168.16.41"
              mac: "52:54:00:00:04:01"
            dciokd-master-1:
              ansible_host: "192.168.16.42"
              mac: "52:54:00:00:04:02"
            dciokd-master-2:
              ansible_host: "192.168.16.43"
              mac: "52:54:00:00:04:03"
        workers:
          vars:
            role: worker
          hosts:
            dciokd-worker-0:
              ansible_host: "192.168.16.44"
              mac: "52:54:00:00:04:04"
            dciokd-worker-1:
              ansible_host: "192.168.16.45"
              mac: "52:54:00:00:04:05"
            dciokd-worker-2:
              ansible_host: "192.168.16.46"
              mac: "52:54:00:00:04:06"
