---
- name: "Download kernel image"
  get_url:
    url: "{{ rhcos_pxe_kernel_path }}"
    dest: "/var/lib/tftpboot/rhcos/kernel"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0644"
    setype: virt_content_t
    checksum: "sha256:{{ rhcos_pxe_kernel_sha256 }}"
    timeout: 1200
  register: pxe_img_file
  retries: 3
  delay: 10
  until: pxe_img_file is not failed
  become: true
  tags: rhcos_live

- name: "Download initramfs image"
  get_url:
    url: "{{ rhcos_pxe_initramfs_path }}"
    dest: "/var/lib/tftpboot/rhcos/initramfs.img"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0644"
    setype: virt_content_t
    checksum: "sha256:{{ rhcos_pxe_initramfs_sha256 }}"
    timeout: 1200
  register: pxe_img_file
  retries: 3
  delay: 10
  until: pxe_img_file is not failed
  become: true
  tags: rhcos_live

- name: "Download rootfs image"
  get_url:
    url: "{{ rhcos_pxe_rootfs_path }}"
    dest: "/var/www/html/install/rootfs.img"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0644"
    setype: virt_content_t
    checksum: "sha256:{{ rhcos_pxe_rootfs_sha256 }}"
    timeout: 1200
  register: pxe_img_file
  retries: 3
  delay: 10
  until: pxe_img_file is not failed
  become: true
  tags: rhcos_live

- name: Generate install-config.yaml
  template:
    src: install-config.j2
    dest: "{{ dir }}/install-config.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Make a backup of the install-config.yaml file
  copy:
    src: "{{ dir }}/install-config.yaml"
    dest: "{{ dir }}/install-config.yaml.bkup"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
    remote_src: yes

- name: Create OpenShift Manifests
  shell: |
    {{ ocp_binary_path }}/openshift-install --dir {{ dir }} create manifests

- name: Patch Manifest
  lineinfile:
    path: "{{ dir }}/manifests/cluster-scheduler-02-config.yml"
    regexp: '^(.*)mastersSchedulable:'
    line: '\1mastersSchedulable: false'
    backrefs: yes

- name: Generate ignition configs
  shell: |
    {{ ocp_binary_path }}/openshift-install --dir {{ dir }} create ignition-configs

- name: Copy ignition files to /var/www/html/ignition
  copy:
    src: "{{ dir }}/{{ item }}.ign"
    dest: "/var/www/html/ignition/{{ item }}.ign"
    remote_src: yes
  become: true
  with_items:
    - "master"
    - "worker"
    - "bootstrap"
...
