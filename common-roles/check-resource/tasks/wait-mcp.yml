---
- name: "Check MCP application"
  block:
    # MachineConfigPool check
    - name: Get Machine config pools status
      community.kubernetes.k8s_info:
        api_version: machineconfiguration.openshift.io/v1
        kind: MachineConfigPool
      register: reg_mcpool_status
      vars:
        status_query: "resources[*].status.conditions[?type=='Updated'].status"
        update_status: "{{ reg_mcpool_status | json_query(status_query) | flatten | unique }}"
      until:
        - reg_mcpool_status.resources is defined
        - update_status == ['True']
      retries: "{{ check_wait_retries }}"
      delay: "{{ check_wait_delay }}"

  # If the last check failed, then move to the workaround
  rescue:
    - name: "Check MCP application failed - no workaround applied"
      fail:
        msg: "No workaround is defined, so the job has to fail at this point"
      when:
        - '"bz2062038" not in dci_workarounds|default([])'
        - '"bz2050394" not in dci_workarounds|default([])'
        - '"bz2101896" not in dci_workarounds|default([])'

    - name: Apply workaround
      block:
        # If retry_count > num_repetitions, we will not iterate more and make the job to fail
        - name: Fail if the maximum number of retries have been reached
          fail:
            msg: Maximum number of retries without success have been reached ({{ num_repetitions }})
          when: retry_count | int > num_repetitions

        # If retry_count <= num_repetitions, then do the workaround - uncordon nodes that are in Ready,SchedulingDisabled status
        - name: Check for workers with Scheduling disabled
          include_tasks: uncordon_workers.yml

        - name: Increment retry count
          set_fact:
            retry_count: "{{ retry_count | int + 1 }}"

        - name: Try a new attempt of this check
          include_tasks: wait-mcp.yml

      when:
        - dci_workarounds is defined
        - '"bz2062038" in dci_workarounds or "bz2050394" in dci_workarounds or "bz2101896" in dci_workarounds'

...
