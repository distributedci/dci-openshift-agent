---
- name: "Check SriovNetworkNodeState application"
  block:
    # SriovNetworkNodeState check
    # Let's give it 60*10=600 seconds (10 minutes), SriovNetworkNodeState should be
    # stable before that time under normal circumstances
    - name: Wait till sriovnetworknodestate becomes ready
      community.kubernetes.k8s_info:
        api_version: sriovnetwork.openshift.io/v1
        kind: SriovNetworkNodeState
      register: sriovnetnode
      until: sriovnetnode.resources is defined and sriovnetnode.resources | selectattr('status.syncStatus', 'defined') | list | rejectattr('status.syncStatus', 'equalto', 'Succeeded') | list | count == 0
      retries: "{{ check_wait_retries }}"
      delay: "{{ check_wait_delay }}"

  # If the last check failed, then move to the workaround
  rescue:
    - name: "Check SriovNetworkNodeState application failed - no workaround applied"
      fail:
        msg: "No workaround is defined, so the job has to fail at this point"
      when:
        - '"bz2050394" not in dci_workarounds|default([])'

    - name: Apply workaround
      block:
        # If retry_count > num_repetitions, we will not iterate more and make the job to fail
        - name: Fail if the maximum number of retries have been reached
          fail:
            msg: Maximum number of retries without success have been reached ({{ num_repetitions }})
          when: retry_count | int > num_repetitions

        # If retry_count <= num_repetitions, then do the workaround - uncordon nodes that are in Ready,SchedulingDisabled status
        - name: Check for workers with Scheduling disabled
          include_tasks: uncordon_workers.yml

        - name: Increment retry count
          set_fact:
            retry_count: "{{ retry_count | int + 1 }}"

        - name: Try a new attempt of this check
          include_tasks: wait-sriov.yml

      when:
        - dci_workarounds is defined
        - '"bz2050394" in dci_workarounds'

...
