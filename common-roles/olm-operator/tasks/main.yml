---
- name: Assert all required fields are present
  assert:
    that:
      - operator | string
      - namespace | string
      - source | string

- name: Create Namespace for OLM operator
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ namespace }}"
        labels: "{{ ns_labels | default(omit) }}"

- name: "Labeling namespace to cover PodSecurity requirements"
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ namespace }}"
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/enforce-version: latest
          security.openshift.io/scc.podSecurityLabelSync: "false"

- name: Create OperatorGroup for OLM operator
  community.kubernetes.k8s:
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        # setting the operator_group_name allows re-using OGs between operators
        name: "{{ operator_group_name | default(operator) }}"
        namespace: "{{ namespace }}"
      spec: "{{ operator_group_spec | default(omit) }}"

- name: "Operator installation"
  block:
    - name: Get operator's package manifest
      community.kubernetes.k8s_info:
        api: packages.operators.coreos.com/v1
        kind: PackageManifest
        name: "{{ operator }}"
        namespace: default
      register: packagemanifest
      retries: 9
      delay: 10
      until:
        - packagemanifest.resources | length == 1

    - name: "Set Desired channel"
      vars:
        channels: "resources[*].status.defaultChannel"
        default_channel: "{{ packagemanifest | json_query(channels) | join('') | string }}"
      set_fact:
        desired_channel: "{{ ( channel | length ) | ternary(channel, default_channel) }}"

    - name: Create subscription for OLM operator
      community.kubernetes.k8s:
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: "{{ operator }}"
            namespace: "{{ namespace }}"
          spec:
            channel: "{{ desired_channel }}"
            installPlanApproval: Automatic
            config:
              resources: {}
            name: "{{ operator }}"
            source: "{{ source }}"
            sourceNamespace: "{{ source_ns }}"

    - name: "Get Operator's CSV"
      block:
        - name: "Get operator's CSV for desired channel"
          vars:
            current_csv: "resources[*].status.channels[? name=='{{ desired_channel }}' ].currentCSV | [0]"
          set_fact:
            operator_csv: "{{ packagemanifest | json_query(current_csv) | first  }}"
      rescue:
        - name: "Operator's CSV not found in the specified channel"
          fail:
            msg: "Operator's CSV not found in the specified channel, check if channel: {{ desired_channel }} is valid"

    - name: "{{ ocp_version }} - {{ operator_csv }} - wait for CSV to be ready"
      community.kubernetes.k8s_info:
        api: operators.coreos.com/v1alpha1
        namespace: "{{ namespace }}"
        kind: ClusterServiceVersion
        name: "{{ operator_csv }}"
      register: csv
      retries: 20
      delay: 30
      until:
        - csv.resources | length == 1
        - "'status' in csv.resources[0]"
        - "'phase' in csv.resources[0].status"
        - csv.resources[0].status.phase == 'Succeeded' or
          csv.resources[0].status.phase == 'Present'
  rescue:
    - name: "Catalog sources information"
      community.kubernetes.k8s_info:
        api: operators.coreos.com/v1alpha1
        kind: CatalogSource
      register: catalog_info

    - name: "Subscriptions information"
      community.kubernetes.k8s_info:
        api: operators.coreos.com/v1alpha1
        kind: Subscription
        namespace: "{{ namespace }}"
      register: subs_info

    - name: "Install plans information"
      community.kubernetes.k8s_info:
        api: operators.coreos.com/v1alpha1
        kind: InstallPlan
        namespace: "{{ namespace }}"
      register: ip_info

    - name: "Print catalog information"
      debug:
        msg: "{{ catalog_info.resources }}"

    - name: "Print Subscription information"
      debug:
        msg: "{{ subs_info.resources }}"

    - name: "Print InstallPlan information"
      debug:
        msg: "{{ ip_info.resources }}"

    - name: "Issues during operator installation"
      fail:
        msg: "There where issues during the operator deployment. See debug info in the above tasks"

- name: "Patch subscription according to install_approval - Default: Manual"
  community.kubernetes.k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ operator }}"
        namespace: "{{ namespace }}"
      spec:
        installPlanApproval: "{{ install_approval | default('Manual') }}"
        channel: "{{ desired_channel }}"
        config:
          resources: {}
        name: "{{ operator }}"
        source: "{{ source }}"
        sourceNamespace: "{{ source_ns }}"
...
