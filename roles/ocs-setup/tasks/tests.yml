---
- name: Deploy the Rook-Ceph toolbox pod
  community.kubernetes.k8s:
    definition:
      apiVersion: ocs.openshift.io/v1
      kind: OCSInitialization
      metadata:
        name: ocsinit
        namespace: "{{ ocs_storage_namespace }}"
      spec:
        enableCephTools: true

- name: Get OCS toolbox pod
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: "{{ ocs_storage_namespace }}"
    label_selectors:
      - "app = rook-ceph-tools"
  register: ocs_toolbox_pod
  until:
    - ocs_toolbox_pod.resources is defined 
    - ocs_toolbox_pod.resources != []
    - ocs_toolbox_pod.resources[0].status.phase == "Running"
  retries: 10
  delay: 3

- name: Get OCS health status
  command:
    cmd: |
      oc rsh -n {{ ocs_storage_namespace }} {{ ocs_toolbox_pod.resources[0].metadata.name }} ceph -s
  register: ocs_health_status
  changed_when: false
  when:
    - ocs_toolbox_pod.resources[0].metadata.name is defined
    - ocs_toolbox_pod.resources[0].status.phase == "Running"

- name: OCS status is healthy
  debug:
    var: ocs_health_status.stdout
  when:
    - ocs_health_status.stdout is defined
  failed_when:
    - "'HEALTH_ERR' in ocs_health_status.stdout"

- name: Test CephRBD PVC
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: rbd-pvc
        namespace: default
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: ocs-storagecluster-ceph-rbd

- name: Test CephFS PVC
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: cephfs-pvc
        namespace: default
      spec:
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
        storageClassName: ocs-storagecluster-cephfs

- name: Get CephRBD PVC status
  community.kubernetes.k8s_info:
    kind: PersistentVolumeClaim
    namespace: default
    name: rbd-pvc
  register: cephrbd_pvc_status

- name: CephRBD PVC Status is Bound
  debug:
    var: cephrbd_pvc_status.resources[0].status.phase
  when: 
    - "'resources' in cephrbd_pvc_status"
    - cephrbd_pvc_status.resources != []
  failed_when:
    - cephrbd_pvc_status.resources[0].status.phase != "Bound"

- name: Get CephFS PVC status
  community.kubernetes.k8s_info:
    kind: PersistentVolumeClaim
    namespace: default
    name: cephfs-pvc
  register: cephfs_pvc_status

- name: CephFS PVC status is Bound
  debug:
    var: cephfs_pvc_status.resources[0].status.phase
  when: 
    - "'resources' in cephfs_pvc_status"
    - cephfs_pvc_status.resources != []
  failed_when:
    - cephfs_pvc_status.resources[0].status.phase != "Bound"
