---
# this may happen at 2.4.
- name: set API version for <= 2.4
  when:
    - cnv_version is defined
    - cnv_version is version('2.4', '<=')
  set_fact:
      api_version: v1alpha1
  changed_when: false

- name: install hco
  k8s:
    definition:
      apiVersion: "hco.kubevirt.io/{{ api_version | default('v1beta1') }}"
      kind: HyperConverged
      metadata:
        name: kubevirt-hyperconverged
        namespace: "{{ cnv_ns }}"
      spec:
        BareMetalPlatform: true
  register: result
  retries: 5
  delay: 60
  until: result is not failed

- name: Check for hyperconverged
  block:
  - name: test_ Check for hyperconverged
    community.kubernetes.k8s_info:
      api_version: "hco.kubevirt.io/{{ api_version | default('v1beta1') }}"
      namespace: "{{ cnv_ns }}"
      kind: HyperConverged
      wait: true
      wait_condition:
        type: Available
        status: "True"
      wait_timeout: 300
    register: result
    retries: 5
    delay: 60
    until: result is not failed

  - name: test_ Check for hyperconverged operator
    k8s_info:
      namespace: "{{ cnv_ns }}"
      kind: pods
      label_selectors:
        - name=hyperconverged-cluster-operator
    register: hco_pods
    retries: "{{ cnv_hco_api_check_count }}"
    delay: 60
    no_log: false
    until:
      - "hco_pods.resources|length == 1"
      - "'status' in hco_pods.resources[0]"
      - "'containerStatuses' in hco_pods.resources[0].status"
      - "hco_pods.resources[0].status.containerStatuses|length == 1"
      - "'ready' in hco_pods.resources[0].status.containerStatuses[0]"
      - "hco_pods.resources[0].status.containerStatuses[0].ready|bool"
  rescue:
  - name: Get logs from affected pods
    environment:
      KUBECONFIG: "{{ dci_cluster_configs_dir }}/kubeconfig"
    shell: |
      set -x

      PODS=($(oc get pods -n {{ cnv_ns }} -o=custom-columns=NAME:.metadata.name | grep ^hco-operator-))
      PODS+=($(oc get pods -n {{ cnv_ns }} --field-selector status.phase!=Running -o=custom-columns=NAME:.metadata.name | awk '{if(NR>1)print}'))

      for pod in "${PODS[@]}"; do
        echo ">>> Get logs for $pod pod" >> openshift-cnv-affected-pods-logs.txt 2>&1
        echo >> openshift-cnv-affected-pods-logs.txt 2>&1
        oc logs -n {{ cnv_ns }} $pod >> openshift-cnv-affected-pods-logs.txt 2>&1
        echo >> openshift-cnv-affected-pods-logs.txt 2>&1
      done
    args:
      chdir: "{{ dci_cluster_configs_dir }}"

  - name: Check for hyperconverged fail message
    fail:
      msg: "Hyperconverged operator has not been set properly"
  always:
  - name: Get logs from all pods
    environment:
      KUBECONFIG: "{{ dci_cluster_configs_dir }}/kubeconfig"
    shell: |
      set -x

      PODS=($(oc get pods -n {{ cnv_ns }} -o=custom-columns=NAME:.metadata.name | grep ^hco-operator-))
      PODS+=($(oc get pods -n {{ cnv_ns }} --field-selector status.phase==Running -o=custom-columns=NAME:.metadata.name | awk '{if(NR>1)print}'))

      for pod in "${PODS[@]}"; do
        echo ">>> Get logs for $pod pod" >> openshift-cnv-all-pods-logs.txt 2>&1
        echo >> openshift-cnv-all-pods-logs.txt 2>&1
        oc logs -n {{ cnv_ns }} $pod >> openshift-cnv-all-pods-logs.txt 2>&1
        echo >> openshift-cnv-all-pods-logs.txt 2>&1
      done
    args:
      chdir: "{{ dci_cluster_configs_dir }}"
