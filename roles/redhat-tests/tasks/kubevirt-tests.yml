---
- name: "test_ redhat-tests: Run the OpenShift Virtualization conformance test suite"
  block:

    - name: "Create temporal directory"
      tempfile:
        state: directory
      register: tmp_vct_dir

    - name: "Download the sonobuoy binary"
      unarchive:
        src: "https://github.com/vmware-tanzu/sonobuoy/releases/download/{{ ts_sonobuoy_version }}/sonobuoy_{{ ts_sonobuoy_version[1:] }}_linux_amd64.tar.gz"
        dest: "{{ tmp_vct_dir.path }}"
        remote_src: yes

    - name: "Download the kubevirt conformance manifest"
      get_url:
        url: "https://github.com/kubevirt/kubevirt/releases/download/{{ ts_kubevirt_conformance_version }}/conformance.yaml"
        dest: "{{ tmp_vct_dir.path }}/kubevirt-conformance.yaml"

    - name: "test_ redhat-tests: Run the kubevirt tests (connected)"
      block:

        - name: "test_ redhat-tests: Run the Ovirt conformance tests  (connected)"
          environment:
            KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
          shell:
            cmd: >
              ./sonobuoy
              run
              --sonobuoy-image={{ ts_sonobuoy_image }}
              --kube-conformance-image {{ ts_kubevirt_conformance_image }}
              --wait
              --mode quick
              --skip-preflight
              --plugin kubevirt-conformance.yaml
            chdir: "{{ tmp_vct_dir.path }}"
          ignore_errors: yes
      when:
        - not (dci_disconnected | default(false) | bool)

    - name: "test_ redhat-tests: Run the kubevirt tests (disconnected)"
      block:

        - name: "Replace {{ ts_kubevirt_conformance_image }} with {{ ts_registry }}"
          replace:
            path: "{{ tmp_vct_dir.path }}/kubevirt-conformance.yaml"
            regexp: "{{ ts_kubevirt_conformance_image }}"
            replace: "{{ ts_registry }}/kubevirt/conformance:{{ ts_kubevirt_conformance_version }}"

        - name: "test_ redhat-tests: Mirror sonobuoy images"
          include_role:
            name: mirror_images
          vars:
            images: "{{ ts_kubevirt_images }}"
            local_registry: "{{ ts_registry }}"
            authfile: "{{ ts_registry_auth }}"

        - name: "test_ redhat-tests: Run the sonobuoy conformance tests (disconnected)"
          environment:
            KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
          shell:
            cmd: >
              ./sonobuoy
              run
              --sonobuoy-image={{ ts_registry }}/sonobuoy/sonobuoy:{{ ts_sonobuoy_version }}
              --wait
              --mode quick
              --skip-preflight
              --plugin-env kubevirt-conformance.CONTAINER_PREFIX={{ ts_registry }}/kubevirt
              --plugin-env kubevirt-conformance.CONTAINER_TAG={{ ts_kubevirt_conformance_version }}
              --plugin kubevirt-conformance.yaml
            chdir: "{{ tmp_vct_dir.path }}"
          ignore_errors: yes
      when: >
        (dci_disconnected | default(false) | bool) or
        (dci_local_mirror | default(false) | bool)

    - name: "test_ redhat-tests: Retrieve sonobuoy results tarball"
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      shell:
        cmd: >
          ./sonobuoy
          retrieve
          -f {{ ts_log_dir }}/ocp_virtualization_conformance_tests_results.tar.gz
        chdir: "{{ tmp_vct_dir.path }}"
      ignore_errors: yes

    - name: "test_ redhat-tests: Retrieve sonobuoy tests summary"
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      shell:
        cmd: >
          ./sonobuoy
          results
          {{ ts_log_dir }}/ocp_virtualization_conformance_tests_results.tar.gz > {{ ts_log_dir }}/ocp_virtualization_conformance_tests_summary.txt
        chdir: "{{ tmp_vct_dir.path }}"
      ignore_errors: yes

  always:
    - name: "test_ redhat-tests: Delete cluster sonobuoy's resources"
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      shell:
        cmd: >
          ./sonobuoy
          delete
        chdir: "{{ tmp_vct_dir.path }}"

    - name: "Removing tmp directory"
      file:
        path: "{{ tmp_vct_dir.path }}"
        state: absent
        force: yes
...