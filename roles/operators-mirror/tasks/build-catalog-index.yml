---
- name: "Create a tmp directory for the prune image"
  tempfile:
    state: directory
  register: tmp_prune

- name: "Prune source index but opm list"
  shell:
    # opm requires write perms in the working directory
    chdir: "{{ tmp_prune.path }}"
    cmd: >
      set -x;
      REGISTRY_AUTH_FILE={{ dci_pullsecret_file }}
      {{ provision_cache_store }}/{{ version }}/opm index prune
      --from-index registry.redhat.io/redhat/redhat-operator-index:{{ dci_opm_version }}
      --packages {{ opm_mirror_list | join(",") }}
      --tag {{ local_registry }}{{ opm_local_registry_path }}:{{ dci_opm_version }}
  register: prune_result
  until: prune_result.rc == 0
  retries: 3
  delay: 10
  notify:
    - "Fix permissions and removing tmp files"

- name: "Push the new index image to the local registry"
  shell:
    cmd: >
      podman push {{ local_registry }}{{ opm_local_registry_path }}:{{ dci_opm_version }}
      --authfile {{ dci_pullsecret_file }}

- name: "Create temporary variables"
  set_fact:
    container_name: "tmp_{{lookup('password','/dev/null chars=digits length=8')}}"
    container_port: "550{{9 | random }}{{9 | random }}"

- name: "Start a temporary container from image generated"
  shell:
    cmd: >
      podman run -d --rm --name {{ container_name }}_index -p {{ container_port }}:50051
      {{ local_registry }}{{ opm_local_registry_path }}:{{ dci_opm_version }}

- name: "Get the list of operator available"
  shell: grpcurl -plaintext localhost:{{ container_port }} api.Registry/ListPackages
  register: packages_available

- name: "Stop the temporary container"
  shell:
    cmd: >
      podman stop {{ container_name }}_index


- name: Install missing operators
  shell:
    chdir: "{{ tmp_prune.path }}"
    cmd: >
      set -x;
      skopeo copy --authfile {{ dci_pullsecret_file }} --dest-tls-verify=false 
      docker://{{ opm_external_mirror[item] | replace('OCP_VERSION',dci_opm_version | regex_replace ('v')) }}
      docker://{{ local_registry_host }}:{{ local_registry_port }}/{{ opm_catalog_source_namespace }}/{{ item }}:{{ dci_opm_version }} ;

      REGISTRY_AUTH_FILE={{ dci_pullsecret_file }}
      {{ provision_cache_store }}/{{ version }}/opm index add
      --from-index {{ local_registry }}{{ opm_local_registry_path }}:{{ dci_opm_version }}
      --bundles {{ local_registry_host }}:{{ local_registry_port }}/{{ opm_catalog_source_namespace }}/{{ item }}:{{ dci_opm_version }}
      --tag {{ local_registry }}{{ opm_local_registry_path }}:{{ dci_opm_version }}
      --pull-tool podman
  loop: "{{ opm_mirror_list }}"
  when:
    - item not in packages_available.stdout
    - opm_external_mirror[item] is defined

- name: "Push again the new index image to the local registry"
  shell:
    cmd: >
      podman push {{ local_registry }}{{ opm_local_registry_path }}:{{ dci_opm_version }}
      --authfile {{ dci_pullsecret_file }}
...
