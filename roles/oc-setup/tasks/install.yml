---
- name: "Get cluster install-config"
  community.kubernetes.k8s_info:
    api: v1
    kind: ConfigMap
    name: cluster-config-v1
    namespace: kube-system
  register: ic
  until: "'resources' in ic and ic.resources != []"
  retries: 12
  delay: 5

- name: "Save the install-config"
  vars:
    install_config: '{{ ic.resources[0].data["install-config"] }}'
  copy:
    content: "{{ install_config }}"
    dest: "{{ dci_cluster_configs_dir }}/cluster-install-config.yml"
    mode: 0600
  when:
    - ic.resources | length == 1

- name: "Validate nodes planes"
  block:
    - name: "Get control plane nodes"
      community.kubernetes.k8s_info:
        kind: Node
        label_selectors:
          - "node-role.kubernetes.io/master"
      register: control_nodes

    - name: "Get compute plane nodes"
      community.kubernetes.k8s_info:
        kind: Node
        label_selectors:
          - "node-role.kubernetes.io/worker"
      register: compute_nodes

    - name: "Get requested control/compute nodes"
      vars:
        install_config: "{{ ic.resources[0].data['install-config'] | from_yaml }}"
        requested_control: "{{ install_config | json_query('controlPlane.replicas') }}"
        requested_compute: "{{ install_config | json_query('compute[? name==`worker` ].replicas') | first }}"
        control_nodes_count: "{{ control_nodes.resources | length }}"
        compute_nodes_count: "{{ compute_nodes.resources | length }}"
      fail:
        msg: "The available control/compute plane nodes do not match the requested size"
      when:
        - ( requested_control | int != control_nodes_count | int ) or
          ( requested_compute | int != compute_nodes_count | int)
  when:
    - install_type in ['ipi', 'upi', 'sno']
  tags:
    - check

- name: "Upload install-config to DCI Control Server"
  environment:
    - DCI_CLIENT_ID: "{{ hostvars.localhost.dci_client_id }}"
    - DCI_API_SECRET: "{{ hostvars.localhost.dci_api_secret }}"
    - DCI_CS_URL: "{{ hostvars.localhost.dci_cs_url }}"
  dci_file:
    path: "{{ item }}"
    name: "{{ item | basename }}"
    job_id: "{{ hostvars.localhost.job_id }}"
    mime: "text/plain"
  loop:
  - "{{ dci_cluster_configs_dir }}/cluster-install-config.yml"
  when:
    - ic.resources | length == 1

- name: "Upload creds files to DCI Control Server"
  environment:
    - DCI_CLIENT_ID: "{{ hostvars.localhost.dci_client_id }}"
    - DCI_API_SECRET: "{{ hostvars.localhost.dci_api_secret }}"
    - DCI_CS_URL: "{{ hostvars.localhost.dci_cs_url }}"
  dci_file:
    path: "{{ item }}"
    name: "{{ item | basename }}"
    job_id: "{{ hostvars.localhost.job_id }}"
    mime: "text/plain"
  loop:
  - "{{ dci_cluster_configs_dir }}/kubeconfig"
  - "{{ dci_cluster_configs_dir }}/kubeadmin-password"
...
