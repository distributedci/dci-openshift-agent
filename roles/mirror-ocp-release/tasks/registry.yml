---
- name: "Check if the release image pullable from the local registry"
  containers.podman.podman_image:
    name: "{{ mor_registry_url }}/{{ mor_registry_path }}"
    tag: "{{ mor_version }}"
    auth_file: "{{ mor_auths_file }}"
    pull: yes
    force: true
  register: pull_release_image

- name: "Remove local release image"
  containers.podman.podman_image:
    name: "{{ mor_registry_url }}/{{ mor_registry_path }}"
    tag: "{{ mor_version }}"
    state: absent
    force: true

- name: "Mirror release images to local registry"
  command: >
    {{ mor_cache_dir }}/{{ mor_version }}/oc adm release mirror
    --registry-config={{ mor_auths_file }}
    --from={{ ocp_release_data['container_image'] | quote }}
    --to-release-image={{ mor_registry_url }}/{{ mor_registry_path }}:{{ mor_version }}
    --to={{ mor_registry_url }}/{{ mor_registry_path }}
  retries: 3
  delay: 10
  register: result
  until: result.rc == 0
  when:
    - mor_force | bool or
      pull_release_image.failed | bool

- name: Generate ImageContentSourcePolicy
  shell: >
    set -o pipefail &&
    echo -e "{{ result.stdout }}" |
    sed -n '/apiVersion/,$p' |
    sed -e 's/name:.*/name: release-{{ version }}/'
  register: icsp_release
  when:
    - mor_force | bool or
      pull_release_image.failed | bool

- name: "Write mirrored image content source policy"
  copy:
    dest: "{{ mor_cache_dir }}/{{ mor_version }}/imagecontentsourcepolicy.yaml"
    owner: "{{ mor_owner }}"
    group: "{{ mor_group }}"
    mode: "0644"
    setype: httpd_sys_content_t
    content: "{{ icsp_release.stdout }}"
  become: true
  when:
    - mor_force | bool or
      pull_release_image.failed | bool
...
