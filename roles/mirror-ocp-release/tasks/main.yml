---
- name: "Validate required variables"
  assert:
    that:
      - rm_cache_dir | string
      - rm_version | string
      - rm_release_url | string

- name: "Check if authentication file exists"
  stat:
    path: "{{ rm_auths_file }}"
    get_checksum: false
  register: rm_auths_file_check
  when:
    - rm_auths_file is defined

- name: "Validate optional authentication file"
  assert:
    that:
      - rm_auths_file is defined
      - rm_auths_file_check.stat.isreg | bool
  when:
    - rm_mirror_container_images | bool

- name: "Validate optional rm_webserver_url variable"
  assert:
    that:
      - rm_webserver_url | string
      - (rm_webserver_url | urlsplit('scheme')) in ('http', 'https',)
  when:
    - rm_write_custom_config | bool

- name: "Validate install type"
  assert:
    that:
      - rm_install_type | string
      - rm_install_type in ['ipi', 'sno', 'upi', 'assisted', 'vsphere', 'acm']

- name: "Validate conditional registry variables"
  assert:
    that:
      - rm_registry_url is defined
      - rm_registry_url | string
      - (rm_registry_url | urlsplit('scheme')) == 'docker'
  when:
    - rm_mirror_container_images | bool

- name: "Mirroring OCP"
  debug:
    var: rm_version

- name: "Create directory structure"
  include_tasks: image-list.yml

- name: "Create directory structure"
  include_tasks: dirs.yml

- name: "Download release resources"
  include_tasks: download.yml
  vars:
    dir: "{{ rm_cache_dir }}/{{ rm_version }}"

- name: "Unpack release rm_artifacts"
  include_tasks: unpack.yml
  vars:
    dir: "{{ rm_cache_dir }}/{{ rm_version }}"

- name: "Extract rm_installer"
  include_tasks: installer.yml
  vars:
    dir: "{{ rm_cache_dir }}/{{ rm_version }}"

- name: "Write webserver configuration files"
  include_tasks: files.yml
  vars:
    dir: "{{ rm_cache_dir }}/{{ rm_version }}"
  when:
    - rm_write_custom_config | bool

- name: "Set OCP release facts"
  include_tasks: facts.yml
  vars:
    dir: "{{ rm_cache_dir }}/{{ rm_version }}"

- name: "Mirror disk images"
  include_tasks: images.yml
  vars:
    dir: "{{ rm_cache_dir }}"
  when:
    - rm_mirror_disk_images | bool

- name: "Mirror container images"
  include_tasks: registry.yml
  vars:
    dir: "{{ rm_cache_dir }}/{{ rm_version }}"
  when:
    - rm_mirror_container_images | bool
...
