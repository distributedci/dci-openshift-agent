{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e9f91cb7_27d59a97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 908
      },
      "writtenOn": "2022-05-27T14:11:15Z",
      "side": 1,
      "message": "Nacho, interesting findings, please see minor comment below",
      "revId": "d6182dee444da61e1f86614fef4ccf69444bd53e",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efee3fcf_73e1bb8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 789
      },
      "writtenOn": "2022-05-30T10:19:17Z",
      "side": 1,
      "message": "recheck",
      "revId": "d6182dee444da61e1f86614fef4ccf69444bd53e",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c1e1ed9_9c9f2f61",
        "filename": "plays/scripts/get-logs",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 789
      },
      "writtenOn": "2022-05-27T13:49:38Z",
      "side": 1,
      "message": "As we observe in the daily jobs, versions prior to 4.9 give default names to new ImageContentSourcePolicy objects using the format:\n\nimage-policy-%02d\n\nSo the first object would be named image-policy-00 and the looked for object image-policy-0 would not exist.\n\nBy removing the object name from oc-get we list all the objects but grep would take the first element of the list all the same.\n\nThe only scenario that worries me is if we had several alternate registries defined, but this does not seem to have been considered for the original solution either.",
      "revId": "d6182dee444da61e1f86614fef4ccf69444bd53e",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31069148_df3d678c",
        "filename": "plays/scripts/get-logs",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 724
      },
      "writtenOn": "2022-05-27T18:08:54Z",
      "side": 1,
      "message": "Instead of relying on the ICSP to know if the image may be available in the local registry, what about using the variables used during the mirroring to know that images were actually mirrored?\nhttps://github.com/redhat-cip/dci-openshift-agent/blob/46284dcf30d777d4946ba0fa66a2b2a993b4d97d/plays/pre-run.yml#L174",
      "revId": "d6182dee444da61e1f86614fef4ccf69444bd53e",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef669bdf_c7634532",
        "filename": "plays/scripts/get-logs",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 789
      },
      "writtenOn": "2022-05-30T08:19:44Z",
      "side": 1,
      "message": "I\u0027ll give it a thought.\n\nIf I understand it right, it would entail passing the variables into the get-logs script as env vars.",
      "parentUuid": "31069148_df3d678c",
      "revId": "d6182dee444da61e1f86614fef4ccf69444bd53e",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f2a82ca_0d744ec2",
        "filename": "plays/scripts/get-logs",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 908
      },
      "writtenOn": "2022-05-27T14:11:15Z",
      "side": 1,
      "message": "Because now we are listing all ICSPs, I think we need to consider the updating this line to something like:\njq -r \u0027.items[].spec.repositoryDigestMirrors[].mirrors[]\u0027",
      "revId": "d6182dee444da61e1f86614fef4ccf69444bd53e",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0"
    }
  ]
}